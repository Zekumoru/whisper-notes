La cosa è che cerchiamo di fare una cosa che stile, che felicitazione e quindi cercherò di ridurre la lezione qui frontale sulla lavagna e cercherò ovviamente di trazionare la
una lezione con delle cose che dovreste fare.
Noi, l'ultima volta, non sono più veloci a questo momento, diceva, l'obiettivo è intanto lavorare con LML, quindi imparare ad usare LML come strumento di rappresentazione grafica di una primezione composta da oggetti.
in questa situazione, il nome della frase e a questo punto eletto il metodo di
Dovremmo ovviamente spostare l'attenzione, intanto praticamente ci sono anche dei regoli sintatici, questo dico in due versioni.
Diciamo, una versione ufficiale, che rientra nelle regole dei rommelli, in questo caso quello di cui stiamo parlando è uno dei diagrammi, è uno dei linguaggi di rappresentazione.
per i classi.
Chiaro?
Quindi, la prima notizia che abbiamo detto, ci sono i simboli di risichietà, pubblico, privato e protetto, che vanno aggiunti per le informazioni più legge.
Cosa è l'intenzione di non salire all'interno della classe?
La stessa cosa, ovviamente, è varificata per le metode che facciamo.
Lo stile di dichiarazione delle variabili è leggermente diverso rispetto a quello che facciamo noi, nel senso che la logica è leggiere il primo tipo per la variabile.
In questo caso, invece, il primo tipo per la variabile, prima la variabile, poi il primo tipo per questo specifico.
la cosa che cambia anche tecnicamente, anche nei musici, per esempio guardo nei musici che imparano il nome e non il tipo, quindi no intro, no intro, però sono decadenti, in senso che se voglio essere appunto, usando uno strumento tipo solo almeno, non mi pongo di essere così, perché
perché questi sono ambienti CASE, è un strumento CASE, gli strumenti CASE sono strumenti di supporto alla progettazione, qual è il nostro?
Il nostro va a questo punto per rendere le persone più produttive perché praticamente hanno inserito dei meccanismi automatici.
e uno delle caratteristiche tematiche è, ok, faccio indire tutto quello che sei, la riflessione di una classe, non ti preoccupare dei risultati, poi te lo metto a posto io, dopodichè trasformo le gambe delle classi chiaramente in codice e a questo punto la trasformazione
A questo punto, in questo modo io, se ci pensate, cerco di ridurre la quantità di codice che l'utilizzatore dovrà utilizzare e quindi è sufficiente avere lo schema del progetto, lo schema dei classi, dopodiché lui riconosce la forma e a questa forma attribuisce la corretta sintassi legata al linguaggio e io ho intenzione di utilizzare
sviluppare un'applicazione, quindi metto case perché appunto trasforma questa visione grafica in testo e quindi regole sintattiche, cioè regole del linguaggio ma fondamentalmente in testo, quindi da disegno
La cosa che mi chiedo di fare, ecco, io ho adesso usato un nuovo termine, il nuovo termine è in termini di strumento case, però a questo punto certi tipi che iniziano a fare questo fondimento, la strumento, c'è un strumento case, da un punto di vista informatico, e poi a questo punto, un'altra domanda, posso considerare Star Wars Nere un strumento case?
in cui potete comunicarlo.
L'idea che tenne l'istrumento case, io sono antico, quindi se ne parlavo nei tempi, quando se ne parlavo nei tempi era praticamente la prospettiva futura, nel senso che dice ok, probabilmente è quello di realizzare gli strumenti case, e lo scopo era quello ovviamente di ridurre la quantità di codice che è riconosciuto da Google Street.
E quindi io descrivo, praticamente,
e nel nostro momento non assorbe la politica perché il modo di logica è un disegno che è ovviamente una grande motiva di testi che ha il senso, quindi il senso praticamente è in effetti poi gli instrumenti che se li hanno creati in maniera importante, ti avete conto che quando ti parlava di questo, attenzione, parlando di 512
per le ramme, quindi erano altri tempi, erano altri strumenti, le macchine erano molto molto più vevoli e quindi il rischio vale era, o meglio, se volevo utilizzare uno strumento di questo genere dovevo anche avere le macchine restanti perché dovevano gestire queste cose e dovevano fare poi attivare il processo di trasformazione.
Ecco perché erano ancora gli abori, certi versi erano
che continuano ad essere costruzioni.
Sono costruzioni perché effettivamente riducono i teletipi.
Quindi, chiaramente, e sono abbastanza lontani.
Detto questo, un'altra domanda che potete fare, mi fanno sempre di strumento case, cosa posso fare con strumento case?
Giusto per farti un'idea,
Ma, ripeto, io non considero le domande che vi sono state venute di volere, insomma, rientrano di quello che l'ha fatto un atto di mente, un atto di fondamentale.
Però, ovviamente, la ripeto, la fanno gli altri fondamentali.
Quindi, avere un'idea, perché siamo in questo momento ok, se mi chiedono una conoscenza, so di cosa stanno parlando, insomma, se mi chiedono un parere e usano il termine ok, cos'è?
Anche per quanto riguarda la similità, sì, utilizzata chiaramente per la descrizione delle funzioni, anche lì ci sono delle regole similazioni un po' diverse rispetto alle nostre, da costino, lo spazio, e poi ne abbiamo conto sulle più tante.
Sì, ma non c'è un pancelletto?
non c'è un underscore, non c'è un trattino, non c'è un singolo tune, non c'è un'esclamazione, un'esplanativo, tanti caratteri chiaramente non possono essere inseriti.
Questo significa che, a molti in cui gattitoro si diventa inserire un nome automaticamente, credo hai fatto un'analisi di quello che può passare
di cosa non può passare.
Nel momento in cui io faccio l'analisi e stabilisco quello che non deve passare, beh, a questo punto significa un carico di lavoro che lo devo controllare.
E questo significa che mi servono le funzioni specifiche che assorbono tutto.
Sono chiaro?
È chiaro?
Attenzione!
Chi vuole che usi quel metodo fuori da quella classe?
Quella classe c'è
Quello è un metodo che fa quel lavoro ma è funzionale, no?
Serve al corretto funzionamento della fase di inserimento di una stringa.
In questo esempio abbiamo detto una volta scorsa.
La volta scorsa abbiamo fatto un altro segno, un esempio delle date, no?
Io faccio un inserimento di una data, di qualsiasi formaggio.
Può essere una stringa, può essere qualsiasi cosa, anche campo per campo, no?
Di anno mesi anni.
Non esiste un anno da 13 mesi, il momento in cui io do la possibilità di inserire il tredicesimo, ho un problema.
Ma nello stesso tempo ci sono anche i giorni dei mesi.
E' una serie di son febbraio di 30 giorni, oltre 30 giorni, che significa che è un pensiero di controllo.
Allora è chiaro che devo avere tutta una serie di strumenti, posso dire me lo controlli tu?
No, l'ho detto.
Quelle sono le attività funzionali,
Mi stai registrando?
Sì, sì.
Ecco perché dicevo, mi sta venendo bene.
Sto dicendo tutto quello che dovessi fare nella lezione.
Potrebbero mancare dei prezzi.
Questo è sufficientemente completo.
Fin qua ci siete?
Quindi, mentre io devo, devo la possibilità di inserire una data.
E' chiaro che frema il discorso della progettazione, il codice non si sprema il tipo di oggetto.
La progettazione prevede, ovviamente, tutta un'analisi delle situazioni politiche di lavoro con le date.
E' chiaro che c'è un problema di associazione numero di giorni mesi.
Ma nello stesso tempo c'è anche un altro problema, come sono i numeri, sono tutti i numeri positivi di meno.
C'è il resto.
E' chiaro?
Quando sto cercando di un produrre, è un'analisi che deve essere fatta prima, ma quando c'è quel codice che vuole un produrre in modo che il codice si venga in funzione, rispetto a una richiesta, tu mi dici funziona bene o non funziona bene?
Perché?
Perché non ci sono tutte le operazioni di controllo che andrebbero fatti, no?
Infatti l'anno scorso ci ha fatto fare il programma delle date, tre quarti di codice e controllo con l'interno.
Infatti, infatti, e lo scopo quale era di quelle esercizioni?
abituarsi all'idea di non imitarsi intanto alla richiesta delutente ci sono delle cose che il utente dice voglio avere la possibilità di inserire il nome del concetto fiscale o una data non ti dirà mai contro la mia data non ti dirà mai che all'interno di un coglione ci può essere un esclamativo o interrogativo non te lo dirà mai perché per lui
Ma neanche, non ci pensa proprio.
Diventa un problema in cui lui involonte elementi.
Non volonte elementi, perché se volonte elementi sa quello che stai facendo.
E quindi chiaramente c'è il loro bordo grave.
No?
Involonte elementi non si dice da l'invio e fatto.
Ci sono delle possibilità.
Io lo faccio, me le rendo forte.
Due, non me le rendo forte.
Il problema è quando non è merendo.
Perché quelle date sono già quisi.
E quindi, il problema non te lo dà subito.
Dipende da quando si è regolato.
Tipo, se hanno un'ora, devi farci la somma e c'è un interno di tipi.
Il motivo per cui, quando c'hanno i motivi di attacco, sono i formi.
I formi sono i moduli di inserimento dei dati.
ci attaccano lì e lì che ci mettono il codice malevolo perché è una finestra aperta e noi dicevamo ok, tego la porta e lascio il colpimento il concetto è questo ecco perchè ripeto, scrivere codice, faccio quello che ho detto gente, però secondo il progettario tanto vero che poi cosa succede?
Secondo che non siamo vivi e per cosa studio sempre, cosa succede?
Periodicamente devo fare una mantenizione
perché qualcuno mi dirà, guarda che questa cosa non sta funzionando, lo hai fatto apposta, no, hai sfuggito.
Se però chiaramente non sei abituato, invece di farti sfuggire una volta, te ne sfuggono dieci, quindi aspetta a tirarlo in terra.
E tu non ti devi scocciare, perché è in garanzia di conseguenza del intercontro.
sì, ma sei su un altro progetto, concessanti di migliorare l'altro progetto, perché devi manutenere un software che è stato consegnato pagato, non è stato funzionato.
Perdo solo, è il rischio.
Ecco un discorso di abituarci in un certo modo.
tipo i controlli, li dovete metabolizzare, in conto che faccio qualcosa devo pensare a qualunque cosa decido, tutto ciò che espongo all'utente deve essere supervisionato, supervisionato o controllato da un pezzo di codice che non è il messaggio, non è la lettura, no?
Con tutta una serie di potenziali, effettivamente.
E' un modo di radionale.
Detto questo, e quindi chiaramente è il discorso dei controlli, i metodi protetti.
Beh, sono queste le funzioni, sono tutte una serie di funzioni, che sono funzioni di servizio che servono a far funzionare bene e dire che eri io, tu, non sei di quel cognome.
Poi ci pensa l'oggetto a gestire tutte le situazioni, tipo tutti gli errori che commetterai in quasi un segnamento.
Chiaro il senso?
Questo è che non c'è solito.
E questo che è uno scopre, lavorando.
Perché?
Che tu parti l'indolentio, no?
Giruppo l'applicazione, giruppo l'applicazione, sì, però non stai, non ti è divinato nessuna posizione.
Non stai anticipando, come ti ho sempre detto, e per le volte gli amo, e quello che ne ho viste tante, di cose che non funzionavano.
Il mio assunto è quello che sa.
ovviamente riposere funzioni ma non l'ha mai visto e non si ottiene critica poi la incrocia e qualcuno deve spiegare però questo è tutto ma questo vale in tutto, tutte le materie, in incessanti, se non sbagli non li vale è chiaro?
ho detto questo quindi, prendi la mano quindi questo è il mondo del riuscito è un evento di cose, no?
di metodi e proprietà.
Le proprietà, che soprattutto ci siamo, anche se ci vengono meglio, possono essere variabili, ma possono essere anche rette.
In termini più generico, meglio.
E quindi, chiaramente, vi devo sempre ricordare che c'è una classe.
Detto questo, andando nel dettaglio della classe, dice una classe che la voglio considerare tale,
l'ingrediente fondamentale.
Gli ingredienti fondamentali sono, una, l'institutore, un'altra, l'attività di super.
Come stiamo parlando di classe?
C'è differenza tra classe oggetto?
La classe mi consente di creare degli oggetti.
L'oggetto è quello che io uso per sviluppare l'applicazione.
La classe mi sembra, soltanto nel momento in cui
Indico il tipo di oggetto con il quale intenzione di lavorare.
Però il lavoro che faccio con l'oggetto, la classe, crea oggetti.
Crea.
Sbagliato.
E la dichiarazione che istanzia.
Cioè, se no, vabbè, faccio un insegnante, quindi discorso, no?
Nel numero di forme.
Poi ci siamo capiti di quello che stiamo dicendo.
E quindi veramente il discorso qual è in pratica.
Ok?
C'è una frase, la dichiarazione dell'oggetto è quella che istanzia l'oggetto.
Quindi, semplicemente, la classe non è intornata in un insieme di regole che dicono come deve essere istanziato l'oggetto.
Andiamo allo specifico.
Cosa significa istanziare l'oggetto?
La risposta che io fornisco è costruire l'oggetto.
Per costruire un oggetto gli oggetti si costruiscono.
Il costruttore si è nata in un prese, ma tutti gli oggetti diventeranno utali a momenti in cui ci portino i nostri posti di visi.
Il costruttore è qui.
Abbiamo detto il costruttore da un punto di vista sintattico, però ripeto, non voglio fare di commettere questa divaricazione.
Il costruttore cosa è quello che non potete
Analizziamo ancora il termine postruire.
Cosa significa?
Sì, postruire e prendere regole che sono messa a disposizione della classe.
Mi va bene, sì.
Ma con il terzo.
Io parlo di abitazione, io chiaramente ho bisogno di un terreno.
Ma siccome qui, ovviamente, il luogo dove andare a costruire il computer, e questo non è una risposta troppo generica,
Nello specifico, un oggetto è qualcosa che sta nella rama, di conseguenza costruire significa trasferire le regole ferone, al stesso tempo dire anche quante grandi e quanta quantità di coste occuperà.
Quella è la costruzione.
La costruzione significa occupare le fatture necessarie, attenzione che l'oggetto possa esistere, con tutte le regole che sono state costruite.
detto questo quindi il costruttore serve da me serve anche un'altra cosa il distruttore perché è importante il distruttore perché se non uso il progetto diciamo che la programmazione dei progetti da questo punto di vista è abbastanza epologica nel senso che io non l'ho distruttore se non uso l'oggetto lo devo distruttire per le possibilità c'è una distruzione automatica
e c'è una distruzione, diciamo, su richiesta, quella tomatica, tormenta tomatica che io non la percepisco neanche.
Il problema a questo punto è un altro.
Ma cosa significa distruggere?
Liberare memoria.
Chiaro?
Liberare ancora lo spazio in memoria che sta malo
E' chiaro?
Il discorso è liberale, significa liberare della memoria che era stata già riservata.
Perché?
Perché chiaramente vuoi essere finito e la metto a disposizione per altri sfogli.
Se non libero mai quella memoria, beh, a questo punto io rischio, rischio potenziale quale l'overflowno non c'è spazio.
Io vi dico le cose dal punto di vista.
E quindi è importante il costruttore.
Per quanto riguarda il costruttore invece?
Beh, noi scopriamo che i costruttori ce ne possono essere più di uno.
E questa è una regola della programmazione di oggetti, no?
I costruttori possono essere più di uno.
Perché?
Perché è vero che io lavoro spazio.
Il scopo del costruttore è anche inizializzare le variabili.
E quello lo posso fare anche con un unico costruttore.
Prendiamo un altro.
Supponiamo di avere una classe persona.
Se io ho la classe persona, io potrei decidere di costruire due tipi di oggetti.
Ok, mi serve un oggetto persona
senza un'identità tra lui, senza nome e senza nome.
Allora, a questo punto, quella è una persona potenziale che esiste, occupa spazio, ma non ha un'identità.
Poi c'è, a questo punto, voglio offrire una seconda possibilità, possibilità di creare
un oggetto con una identità, non è per me.
Allora che faccio?
Se voglio una persona senza identità uso un costruttore, se voglio una persona con un'identità uso un costruttore con due parole, il nome e il nome.
Chiaro?
Bisogna avere una necessità di avere un certo costruttore al quale posso
offrire possibilità di inviare il nome col mio metà.
Quattro, il nome col mio metà oppure la rinascita.
Vedete, il discorso dei costruttori non si pensa, però quando progetto una classe è chiaro che devo decidere, tanto è vero che la merestata del discorso dei costruttori, il primo che mi viene lo metto dentro, sino quando?
Sino solo lo contrario.
Lo contrario è che devo dire, andami a un'avventura con le storie,
non state progettando, state eseguendo un compito, perché per segnare lo che si deve fare per progettare potete riuscire, praticamente, quanti costruttori riuscire per noi.
Se non vuoi ricerca, il distruttore è un... quindi costruttori multimedico, distruttori... ci siete?
Questa è la regola della problemazione.
a chi ti ha scoperto in questo mondo.
Io sto parlando in città, non ho scritto la mia informazione.
Perchè?
Sono avvocizzato il concetto di qua.
Ok?
Ok.
A questo punto dicono bene, voglio immaterializzare, sì, ok, questo è il verore, lo hai rappresentato immediatamente, però poi alla fine e in prima di me le ho dette da un formato di differenza.
E' chiaro che
hanno delle funzionalità, ci dev'essere.
Ci sono due aspetti.
Ho progettato una classe, che me la faccio?
E qui attenzione, questo è un errore di corrente, ma non è un errore di corrente evoluto.
Nel senso che se io progetto una classe, progetto una classe, qual è l'evoluzione?
un'applicazione con oggetti.
Allora, a questo punto, il tipo di presentazione è diverso.
Perché?
Analizzo il funzionamento delle singole classi, analizzo la richiesta, scrivo l'algoritmo, all'interno dell'algoritmo faccio tutta una serie di chiamate alle varie classi, ai vari oggetti che mi servono nell'applicazione.
La classe serve per costruire oggetti da inserire all'interno di una applicazione.
I punti di vista sono due.
Io costruisco il monitor, tu costruisci il case, lui assembla.
Quando tu progetti il monitor, non ti preoccupi del case, e viceversa,
nel momento in cui tu devi assemblare, allora devi chiedere, ma come funziona il monitor, quali sono i caratteri ceder, perché stai utilizzando i due oggetti, li devi fare incastrare e quindi, ottenendo il terzo oggetto, cioè l'applicazione, il computer sembra chiaro?
Ripeto, sono delle cose talmente ovvie
che è che voi mi dite in una normale.
Se ve le sto dicendo, c'è un motivo, talmente ovvia, talmente normale, che non le fate.
È un modo di pensare che non avete.
Perché?
Sì?
Voi ci state pensando perché io vi sto tentando.
Però, fino a prova contraria, voi continuate a fare confusione tra usare l'oggetto
è il progettare l'oggetto.
Se io ti chiedo di progettare l'oggetto, tu mi chiedi il main.
Quando progetterò un oggetto, non c'è il main.
Il main è il programma digitale, quello che mi ha chiesto l'utizio.
E allora, chiaramente, la domanda che mi dovesse fare è questa.
No, questo è il mio progetto.
Il mio progetto non è una quale essere.
mi sta dicendo che non devo usare il main però ti dico, subito dopo devi usare il main una volta che ho scritto la classe, che ho progettato, che ho codificato, ho fatto tutto come faccio a testare?
perché un'azienda, una volta che hanno realizzato il prodotto, la cosa successiva non è la vendita, è il testo.
E quindi chiaramente per avere il testo bisogna di un barco, e il barco è meglio.
E quindi anche il video può fare tutta una serie di chiamate, per verificare che tutti i metodi, tutte le cose funzionano per effetti.
Chiaro?
Quindi, io in teoria,
potrei dare un oggetto e dire ok, testali.
Non ti chiedo di proiettare, ti chiedo di testare.
E lì chiaramente, questa è una chiesta strana, parentemente strana perché il problema è il testo.
Tanto è vero che nella realtà chi testa non è
In questa zona ricordo che vi disse in annuncio, chi scrive il codice, quando si scrive un concetto bisogna essere lì, non lo legge, non lo scrive.
Chi sviluppa, ha in testa la soluzione, sa quello che dice dentro, quindi segue la sua idea.
Non è oggettivo e non è obiettivo.
È chiaro?
Chi testa, questo è quello che scrive il codice, chi testa,
Dice ok, devo testare le funzionalità, perfetto, allora a questo punto mi faccio imprese qual è l'obiettivo di chi testa romper questo oggetto, perché se lo rompe ha trovato una tecnicità, se il oggetto non si rompe, allora funziona.
Il discorso è torniamo sempre su un'altra missione che io sottoposto, a lavoro tra funzionali.
Oggi tu testi tutta l'applicazione che usa questo indietro.
Dopo di che domani cambiamo il luogo.
E mi ha detto subito tu hai.
E' andata questa cosa.
Ma cosa è?
E' la vita no?
Chiaro?
Lavorando in un qualunque luogo di lavoro, prendiamo la pizzeria.
Tu fai la pizzeria e fai le pizze che il cassiero deve fare il suo.
Ma non puoi dire, siete la stessa cosa perché vivete allo stesso luogo, perché le attività, le scuole, sono diverse.
Però è normale quando parliamo ovviamente di teoria, da un momento in più parliamo di oggetti, no?
Ma cominciamo a mescolare tutto, facciamo tutto, scriviamo oggetti, usiamo oggetti, scriviamo applicazioni, però facciamo cose.
Mentre oggettiamo un po' più teoria.
Chiaro?
Ecco perché ti dico sì, va bene?
si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si si
perché se vendo quel prodotto a questo punto con tutte le fasi di testa, quanto devo far pagare?
Poi arriva il cinese, è un testo al cazzo, quant'è vero l'enorme c'è?
Cioè ma quanto costa la testata?
Questo è uno dei... no?
Non sono cinese, lo fanno anche gli italiani.
Non c'è voglia di lavorare insieme a tutti e tutti.
Sì, ma ripeto, su questo ci possiamo piuzzare di chiamare quando ci facciamo.
Io ripeto, devo dire che è una cosa che forza che voglio.
Questo ovviamente nientra, io lo considero un approfondimento, nel senso che anche su
Ma perché in quanto dovrebbero essere grossi?
E quanto poi diventerebbe dispersivo?
Io sto cercando di andare su e giù, su e giù, spollegando le cose, no?
Quindi sto cercando di tenerle unite.
Ma se io dovessi scrivere su un libro, dovrei andare per le mie pagine?
Dopo che ho esaurito le mie pagine e che mi studiate il test, ho perso il filo di quello che stavo dicendo prima.
È una questione strategica, no?
Chiaro?
Tanto è vero che fai tutorial con pasta e cose?
Perché?
te lo chiude in una trattura nella mida del riposesi cosa fa?
questo e allora la prima cosa che fa è chiaro che la formazione di oggetti se fa la formazione di oggetti non c'è una riga di codice spiega ma neanche l'unità della mida del riposesi
e aggiungo inizialmente l'oggetto fatta con C++ o Java.
Bene, in quel momento in poi è Java che parla, e C++ che parla, o quello che riguarda che parla.
Ok, allora che dico?
Ok, questa è la sentenza di CQQ.
Significatelo.
Mettiamo classe C, parentesi grafica, all'interno, per l'indirizzo.
In questo caso abbiamo un consettore iniziatore.
Commentate dove dite che c'è la fase di implementazione secondo la regola CQQ.
Chiaro?
in un colo giocchiato e stessa lì è una ricorda diversa, non del sangue non c'è no, al senso che si può anche stare, il problema è il discorso dei stati, perchè stanno parlando in significato di stati, perchè usano la parola
sono qua?
no sono la quarta ora?
giuriamo tutti quanti?
terza ora
Non alla terza, alla quattro, capito?
Allora, alla quarta abbiamo una profiliochetti.
Questa è già la seconda.
Ciao, grazie.
Ah, va bene.
Cosa è quello che ci accadono in questo tipo di postizioni?
Attenzione.
Mi chiaro una visibilità.
Per quanto riguarda, dici più o meno che posso usare questa sentanza.
in tassi, la gente non vuole che ci si concentrasse sulla risicurità.
La prima cosa che vorrei dire è che, ovviamente, questo metodo pubblico, quando io dico membro pubblico, perché può essere sia una variabile, sia una funzione, quindi termine membro e li tira dentro tutti e due, ecco perché si usa
L'importanza di usare quel valore, tanto è vero che sui libri si parla di meccaniche, chiaro?
Per generalizzare il concetto di contenuto che succede.
E quindi tutti i membri che possidiscono una classe, ovviamente, hanno bisogno di essere resi, quindi simili.
Ci sono tre livelli
vengono raccolti in un unico termine, il termine è interfaccia.
L'interfaccia è quello che l'utente finale usa dell'oggetto.
Di che resto funziona l'oggetto?
Corretto funzionamento?
Penso che sia passato il funzionamento.
Ci siete?
Ok.
Interpretiamo?
Questo significa che il costruttore ha una visibilità pubblica, mentre il costruttore ha una visibilità pubblica.
Attenzione, non è un caso quello che ho scritto, nel senso che quei metodi devono avere una visibilità pubblica.
Perché?
Per un motivo molto esatto.
Il costruttore mi serve per costruire oggetti.
Siete?
e cos'è in me una cosa esterna dall'oggetto.
Nello stesso tempo il destruttore è pudimo perché potrebbe avere la necessità di voler distribuire prima l'oggetto e se lo nasconde allora può partire nella migliore dell'ipotesi quando
Chiaro, se vuoi riuscirvi, attenzione, sintaticamente, sintaticamente, il distruttore io non riconosco, io non posso riconoscere sia il postruttore che il distruttore, attenzione, tosando il linguaggio che è il proprio.
Il proprio perché tecnicamente il C++ ha le sue regole, ma quando tutti quanti gli invadono,
e CPPO dice, guarda, che i costruttori vi può riconoscere perché hanno i stessi nomi della classe ogni volta che trovi un elenco di nomi tutti quanti uguali e corrispondono a quello della classe, quali sono tutti i costruttori?
In conseguenza, quando io devo analizzare una classe che faccio già, la prima cosa che devo fare è, oltretutto dove devo commentare, mi devo commentare
le menzioni costruzioni.
Perché?
Sono i vari modi di costruire un oggetto.
Se non me lo dici, come faccio?
Se faccio, indovino, prendo sempre quello di default.
Sì.
E tu decidi di non mettere quello di default.
Allora, da questo punto, chiaro che me lo devi documentare i costruttori.
Non è vero che quando andate a leggere la documentazione di una classe, c'è l'elemento della spesa dei costruttori.
E quanto riguarda il distruttore, non c'è parametra.
Ma i costruttori non ce santi, la documentazione non può mancare, se manca c'è un problematica, non posso usare quella pasta.
Chiaro?
Detto questo, mai ci si più ha un'altra regola, l'altra regola, l'altra regola parentica, il riconoscimento del distruttore.
un tilde, cioè un singolo tilde, seguito dal nome della classe.
Beh, questa combinazione di caratteri tilde più il nome della classe è il costruttore.
Ci siete?
E il distruttore?
Ci siete?
S. Ma.
Io sto parlando con le 5 più.
Aspetta, aspetta.
io ho detto che esistono, il linguaggio comune a tutti quanti i linguaggi, ci sono i costruttori, ci sono i distruttori, i costruttori ce ne possono essere più di uno, lo scopo dei costruttori è quello che vi ho detto, lo scopo dei costruttori è quello che vi ho detto, e chiaramente ho aggiunto costruttori, distruttori devono essere pubblici.
Ok, ho fatto il mio lavoro da teoregui, da questo momento in poi, giusto per darvi, per di capire, alcune cose,
che aveva rispatto aver smesso la mia lezione.
La mia lezione è finita.
E chiaramente è così, c'è un po' di veneratica, un po' di vista pratico.
C'è quell'altro il quale... vedete?
Non è vero che si sono circolazzate le persone che... dei teorici che non sanno, che... che non esce perché poi inarrarne.
Ecco perché dico.
Io non devo sapere più, no?
Ti incazzi pure se non ti puoi ricordare?
Ma ti incazzi sempre con me?
E' una cosa che ti uffa dopo una vita.
Tu ne hai una recepzione.
Io, tu, io.
Senti?
Allora, in cipri più grande sono le regole.
Di Giavone che ci aveva...
No.
Non lo so.
Non lo so.
Certo, proprio.
Dove non ci arrivano?
Ci arrivano solamente i mostri?
Cioè, non so se rendere.
Non siamo gli teri.
E se vengono le persone femminile?
Hanno questa reazione.
Scappano un po' così.
Va bene, no, tutta la vita con voi.
Nono, nono, nono, ci senti?
Questo è tutta la vita.
E quindi, il discorso è del regolamento del CIP più, no?
Ve l'ho detto, stessi nomi, costruttori.
Elenco di nomi, costruttori.
Tilde, distruttori.
Visibilità, tutti i pubblici, ma vale per tutti.
A questo punto ti dico,
Ma non fare gente di osceni.
Perché il costruttore non per forza deve essere fuggito.
Non è. Non è. Cioè se lo voglio... Questa è la regola, funghi.
E ti ripeto, chiedilo a certe GPT e se sbaglia la risposta bruci a certi GPT.
Non state vedendo quello, c'è la scena di libri in cui chiedo di bruciare perché di non vincere.
Ma c'è un motivo, c'è una spiegazione, capisci?
E semplicemente la spiegazione è quello che ti ho detto prima, se io devo costruire degli oggetti, si presume che gli oggetti li costruisca fuori dalla classe, a meno che, è chiaro che ci sono le versioni private, però c'è dell'altro, non c'è soltanto una parola, capisci?
Il concetto grosso è pubblico, poi le specializzazioni sono dei casi particolari che possono esistere, però
questa immunizioni, io ti devo dare prima la base, poi le cose eccezionali, le vediamo, perché sennò puoi diventare un distruttore.
L'assolutismo è, questi sono gli ingredienti di base, dopodiché è chiaro ci sono delle situazioni particolari che vanno, però anche lì
Tu lo rendi privato, ok, cosa c'è dietro?
Non mi basta dire semplicemente questo è privato.
No, perché è privato?
Qual è la funzionalità?
E qui è lì.
È chiaro, ma te lo dico subito, che tu fai una combinazione di oggetti che contiene all'interno un altro oggetto, il quale non viene semplicemente dichiarato, ma innestato, e beh, e beh, sì,
ci siete?
quindi questo è lo standard e allora ritornando a noi, cioè il G++ dice ok, il G++ dice altre cose e il Java cosa dice?
beh dice le sostantive cose, cosa vuol dire entrare nei costruttori?
le riconosco perché hanno lo stesso nome, i distruttori le riconosco perché hanno un tilde
Ci siete?
E allora sono le stesse cose.
No, c'è una piccola differenza.
La piccola differenza consiste in questo.
Vedete questa classe?
Non è una classe C++, è una classe Java.
Perché voglio vedere la classe C++?
Basta una volta.
Basta una volta.
di pubblici e non c'è bisogno di tenere la nuvolta pubblica pubblica pubblica pubblica, ma questo bene per tutti, per il java no, ve lo devi dire sempre, chiaro?
E quindi già questa è una piccola differenza che crea problemi, specialmente quando passo da civili al java no?
Ma c'è anche un'altra
se non scrivo pubblico, in informatica, se non scrivo qualcosa, evidentemente c'è un default.
Cos'è il default?
Ok, la visibilità del fenomeno.
Allì, praticamente, bene.
Non c'è più più questa cosa da funzionare, perché il default è privato.
semplicemente perché ho usato l'interforte non ho esplicitato in effetti per non sbagliare mai il vero sentito tanto la parola chiaro?
e quindi chiaramente io lo scrivo sempre non sbagliare mai attenzione l'ho detto se non facciamo ci conosciamo il caffè anche lì c'è una roba pubblica, privata e protetta
class era un class usate in particolare i piccoli hp e qui cominciamo a vedere le piccole grandi differenze ci sono i costruttori perchè ti ho detto da teorico tutte le classi hanno i costruttori e io vi ho detto anche un'altra cosa tutte le classi possono avere più costruttori siete qui?
allora tu dici no?
ci ha detto lui, in conseguenza lo uso, comincio a stendere la classe e apri la regola, diciti che i costruttori sono riconosciuti dal nome della classe e non ci sono.
Perché?
Perché la regola del PHP è che il costruttore non ha il nome della classe, ha un'altra parola chiaro, chiaro?
prima di differenza.
Il PHP non prevede i postruttori, non prevede ultimo.
Quindi, se voi scoprite come si crea il primo postruttore, in base a quello che mi hai detto, c'era un altro che può essere replicato, quindi copri in colla, gli metto qualche parametro, no?
perché lui ammette un profitto.
Ci si vede?
Allora, con questo cosa sto cercando di dirvi in pratica.
Io vi ho dato delle regole teoriche, non teoriche, non concettuali.
Un certo libro che ho messo a un oggetto ha queste regole.
Poi, dopo considerare che l'ho messo ad un oggetto, si rispetta quel tipo di dettaglio.
Poi ci sono i linguaggi che implementano questi concetti.
e mettono a disposizione le proprie regole.
Le regole del java vanno a coincidere con quelle del CPI-1.
Vedete che finora?
Prevertà il penteco.
Come?
Come?
Perché?
Non è vero.
Se doveva in crisi,
e anche queste sono affiamazioni pericolose.
Io ho detto una cosa sui costruttori, se ci riflettiamo ti dica una risposta.
Allora, o parliamo di oggetti?
Allora, a questo punto c'è l'universo mondo, scrivo oggetti.
Ma se io devo, quindi praticamente io non uso le classi,
e io mi costruisco, mi personalizzo gli oggetti, no?
Quindi, se io ti dico, non c'è il concetto di classe.
Quello che scrivo sono oggetti.
Se quello che scrivo sono oggetti, mi salta un passaggio.
La dichiarazione.
E quindi, siccome dichiarazione significa costruzione, non costruisco niente, perché ti sto dicendo qualche cosa che ho detto.
Chiaro il senso.
Non avrei il senso.
Ma tant'è vero non c'è mai quella classe, concettualmente.
Potrebbe anche non esserci la classe.
Perché non gliela frega niente, la classe.
Sto dicendo sempre di cali.
Perché io ti dico, tutti gli oggetti hanno la classe.
Tu prima prendi la classe e poi prendi l'oggetto.
Tu vai a cercarti la classe.
Allora dici come creare gli oggetti.
Che poi ti puoi creare, no?
Bene.
a questo punto io sono io il creatore degli oggetti lo scrivo so che sono di strano però in effetti chi viene da un'aggettazione pura degli oggetti è chiaro che fa fatica ad assicurare queste cose all'inizio ma stiamo parlando di python?
eh perché mi stanno andando un po' a farci il bello perché non riesco proprio a farci
E' lì che ti va in pappa il cervello perché dici io ho consolidato queste basi concettuali di programmazione di oggetti, i principi li ho metabolizzati, vado a vedere le implementazioni di varie linguade e vedo che praticamente le hanno violate, in effetti le hanno violate.
Perché?
Per una questione pratica è più comodo non fare queste cose, quindi bypassare la teoria, il concetto, inventarmi
una mia versione di oggetto è già fatta e tu li usi.
Torni indietro in fila scritta, perché tu potresti avere la necessità di costruire i tuoi oggetti e quindi devi avere la regola di no.
Sì, ma quale?
Come?
Non ti devi mai fermare.
Cioè, della serie.
Allora, te lo dico.
Il discorso del Python è già tutto pronto, il velo del Python, pensa una cosa, c'è, la prendi e la usi.
Basta, devi imparare come usarla e tu la usi.
Documentazione.
Detto questo, no, basta stare come un paio.
Detto questo, il problema che è, diamo per scontato, è che è praticamente, vabbè, da lì.
La domanda che ti pongo è, sì, ma chi l'ha scritto?
Il problema è che qualcuno l'ha scritto.
Allora, tu cosa vuoi essere?
Vuoi essere uno che usa gli oggetti o vuoi essere uno che progetta gli oggetti?
No, no, non è ironia, nel senso che prima te l'ho detto.
Quando ho detto la parola di team, ho detto tu progetti l'oggetto, tu usi l'oggetto, tu testi l'oggetto.
Il messaggio è attenzione, sono figure e profili differenti.
Quando tu mi dici Python uso l'oggetto.
è uno dei tre, perché l'uso significa che mi progetto un'applicazione dove ho l'uso degli oggetti che qualcuno ha fatto, ok, se ti chiedessi di progettare tu un oggetto che dovrà usare lui, da dove cominci?
E' chiaro, la visione di chi usa, per capirci, ma lo potevo fare anche adesso, ma già funziona con Java,
non caggiava in legge, cioè non come paese, non un po' più in ciprasta, puramente non come paese.
Vuoi usare l'oggetto?
Sai cosa è questo?
Che mi riguarda?
No, dimmi.
No, è... Si maiuscola.
No, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no.
e se è un oggetto c++ e se è un oggetto java come si costruisce un oggetto?
per poterlo costruire bisogna dire class quali sono i costruttori della class?
quanti tipi di costruttori ci sono?
vai sulla documentazione e scopri quanti ce ne sono del tipo questo è uno
da quando tu cercando di dire chi, tu non sai come fare la classe stringhi, tu devi sapere solamente quanti costruttori ci sono, ecco come e quando fatti, chi sviluppa le applicazioni non ha detto come fare la classe, quindi la visione di chi sviluppa le applicazioni è completamente diverta,
Perchè?
Che ci siano delle redditarietà.
A te non te ne credo niente.
Perchè?
Perchè lo stupo non è quello.
Lo stupo è che io devo scrivere la mia applicazione e devo usare gli oggetti in maniera molto più semplice.
Quindi io studio semplicemente l'interfaccia.
metodi che mi servono.
La prima cosa è la prima cosa che dovete studiare, la prima cosa che dovete studiare, l'elenco dei costruttori.
Perché se non dichiarate l'oggetto, è inutile che mi invento tutti quanti di progetti, cioè tutti, le chiamate a metodi, non c'è l'oggetto.
Quindi lo devo creare, poterlo creare lo devo dichiarare e poi stanziare.
Sì, con quali regole?
dipende dai costruttori che da qua si mette a disposizione non è che me lo inventi, a me è che un vado successivo di tutti o di qualunque altro luogo vedo che il tizio usa... ti fai un esempio di classe, cioè di applicazione che usa la classe stringa non parte con l'esempio sull'esempio costruttore c'era l'increazione di variabili senza parametri e nothing
automaticamente tu associi ogni volta che bisogna ridicare ad una storia che ti ha sempre detto modo non è identificato se la puoi inizializzare inizializzare ma questo significa che c'è un altro costrettore che funziona in maniera diversa il discorso di il vero studio il programmatore o il sviluppatore lo fa sul manuale
Devo imparare ad usare una classe.
La prima cosa che devo imparare è l'evento dei moni.
Per creare gli oggetti.
Perché sono i costruttori che mi dicono, puoi usare questo, questo, questo, questo, questo.
E tu dici, ok, nella mia applicazione mi serve questo.
Non ti sovo quello.
è chiaro?
quindi il discorso è ok, questo?
bene, questo vuole essere cgpl, questo vuole essere java, la cosa è certa questa non è un t, questa è una class va in una software house dove progetta una class l'uso è infatti di test, ma quella è un'altra persona che
se tu devi progettare una classe devi usare le rave di progettazione delle classi scelto del paio cammino uso la classe perché e se poi dici a un certo punto della mia vita dici vabbè ma io mi voglio creare il mio pacchetto di attrezzi di oggetti nei come caccio si fa?
Il modo di ragionare di chi usa Python è quello di usare gli strumenti.
Ma mi va bene!
Ed evadio!
Il discorso è, cosa vuoi fare da grande?
Vuoi solo usarli?
Va bene, facciamo solo quello.
Oppure vuoi progettare quelle cose che qualcuno andrà ad usare?
Non l'applicazione.
Sì, sì, però il mio modo di ragionare è diverso.
devo mettere a disposizione tutte quelle funzionalità che verranno utilizzate, a poi le classi sono ridondanti.
S'è andata a vedere un evento dei metodi della classe stringa, non è vero che una delle richieste che vi farò è andata a studiare la libreria STD, in primis, a classe stringa.
In effetti, se andate su C++ c'è problem.
la classe stringa e lui quando comincia a spiegarla ti dice la prima cosa che ti dice ok questa è la dichiarazione che dovevi utilizzare quando devi mostrare l'oggetto è chiaro se non è l'oggetto non direi che ti spiego il metodo è chiaro quindi questo è un oggetto, cioè questa è una classe, questa è una classe S è l'oggetto inizializzato
Chiaro?
La possibilità è questa, tutta il resto è la riproduzione.
Sono concentrato sull'appigazione, ma qual è l'uso?
Cosa vuoi fare?
Progettare l'appigazione?
Beh, ok.
Non ti faccio la programmazione, perché non tenete voi i caschi.
Andiamo direttamente alle librerie, ho detto che questa è una libreria che fa questo, questo è un elenco di metodi del programma,
Quando arrivo a questo punto, e quello che volevo, avevo intenzione di fare con voi, io devo parlare di intelligenza artificiale?
Io ti devo dire quali sono le librerie che devono essere utilizzate?
E te non te ne frega niente di come si dichiarano a classe?
Ti interessa capire qual è la funzione, qual è l'uscola e come si scrivono i diretti?
Perché l'obiettivo è scrivere quel programma di intelligenza artificiale,
Qui l'obiettivo è imparare la programmazione di oggetti e imparare ad utilizzare quegli oggetti in una mia applicazione, in modi diversi.
Sono chiaro?
Questa è il punto.
Quindi, torniamo a noi.
Di sotto deve scrivere la classe.
Benissimo, fate una classe C++, un po' più alle impollate.
Poi non può studiare un distruttore e mettere in Java, cambia dei linguaggi.
Però non succederà niente perché mancherà il main.
E lì il main di Java è un po' diverso, leggermente diverso.
Perché il C++ è un'estensione del C. E quindi nell'anima, cioè chiaro che c'è il C++,
C++ chiaramente è fondamentalmente un'estensione, quindi hanno ancora la lezione, tanto è vero che se voglio testare gli oggetti, uso... Cos'è il main?
La funzione.
E quindi esterno?
Nel momento in cui io lavoro con Java, il main, non è esterno, no.
C'è una classe speciale che contiene, proprio interno,
un metodo speciale e cosa ha di speciale ogni volta che viene incrociato la classe, cioè l'oggetto parte per primo.
E' una specie di costruttore, no, ma il punto di lancio dell'applicazione.
Chiaro?
E' una filosofia leggermente diversa, no?
Perché è ad oggetti, il C++ non è completamente ad oggetti.
E' la dimostrazione, c'è un metodo speciale,
la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no, la parte di un oggetto no
Ok, questa è la stessa rivelazione di un intero in Java.
Manca il Java Sprint.
Hm, sbagliatelo.
In Java Sprint, let, let, let, let, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no,
ecco perché era inizialmente... cioè, per ricorsi... in maniera implicita... dici che è una variabile ma non è più... dici che... in base all'approccio dell'attilento, si calcola quanto spazio ha l'uomo, so così... allora, non è una variabile, non metti in quello piccolo modo io a me piace dire che un segno è posto, è una manifestazione di un utente, un'intenzione di usare una variabile ma quella cosa diventa una variabile...
Allora posso dire che ha una variabile utile intera?
E' il valore che decide praticamente cosa diventerà.
E nello stesso tempo... Perché non viene allocato, però non è allocato a memoria.
A questo punto, cosa fa?
Dice, ok, insomma, in questa situazione il valore ti dice, guarda, quella variabile dovrà diventare, di conseguenza distrugge quello che era,
e lo leggiamo praticamente con il nuovo titolo.
Ma questo è ovviamente un altro mondo, nel senso che è un altro distorzio sull'inguale.
Torniamo... No, no, ripeto, se no poi andiamo a farci un'interagazione, abbiamo perso il focus, il focus è questo esempio che abbiamo messo, perché il Java diceva non è ad oggetti, perché?
un uguale che ammetterà un'imparazione di questo genere di variabili non è l'oggetto.
Perché?
No, no, nel senso che il concetto di tipo, l'imparazione dell'oggetto, è la classe che crea oggette che poi sono in spottore.
questo è in giama?
è in giama!
è in giama, secondo che l'altro... qual'era la differenza?
vedo cose di Pascal e mi viene in mente Pascal
Allora, in jama si istannano le due questioni.
Scusami un attimo.
Cos'è A?
Un intero.
Cos'è D?
Un intero, concettualmente.
Realmente, il contenitore che dovrà contenere un numero intero è il soldato di oggetti.
Se è un oggetto, ci sono metodi e proprietà.
È chiaro?
Quindi non dovrò mai fare questo.
Allora, perché?
Perché Adam è un oggetto.
Sono due tipi diversi.
Sono due concetti diversi.
sono due realtà diverse però esprimono questo significa il tuo intero e l'intero il problema è che il nuovo è il puro in cui ce n'è nulla che l'altro e qui facciamo l'intero lavorano con gli interi però faccio un'assegnazione dai crisi ma anche
idealmente sono messo, però uno era così, l'altro era semplice, il punto di vista del Cino sembra un po' inizialmente sicilista, è una merda di carattere, un po' inizialmente bassa.
E questo è un modo di ragionare che dovreste suggerire se non fare cose.
Quindi torniamo a noi,
Cosa potete fare?
Niente, è possibile una classe semplice con uno... ...dovevo dire.
Copiare e collare, per cercare di vedere cos'è che non potesse funzionare.
Una cosa che non avete, un'informazione che non avete, è come imparare una classe Java.
La classe Java praticamente presenta un metodo speciale e ci deve essere chiamato Main.
e quindi lì sarà il punto di lancio di tutta quanta l'applicazione se in cd2 ci deve essere la funzione main ed è il punto di lancio di tutta quanta l'applicazione e quindi... bom!
torniamo a noi alla programmazione di oggetti la nascolta dicevamo sì, va bene, ma questo significa che colambiamo quei classi oggetti l'evoluzione di questo punto
per quanto riguarda il neovascript del neovascript del OML ok questo è un oggetto ci siete?
abbiamo detto che uno dei concetti della programmazione di oggetti è il concetto di ereditarità cos'è ereditarità?
di tanto dal punto di vista del OML ereditarità la riconosco perché c'è questa rappresentazione
Allora, il discorso è l'editarità abbiamo detto, l'editarità significa che
ci deve essere qualcuno che ha qualcosa da dare a qualcun altro.
Quindi praticamente se noi usiamo la metafora della famiglia, c'è un genitore che ha qualcosa da dare ai figli per vita.
Chiaro?
Ci siete?
Allora, qui abbiamo tre soggetti.
Allora, l'attivitazione grafica.
Assumiamo, cioè diamo, significato, per fare
che ha qualcosa da dare e poi ci sono i figli ci siete?
questo è il figlio che ha raggiunto
Cosa c'è cercando di diventare?
Attenzione alla posizione dei rapprecci.
Il padre, se questo è la nostra idea, se questo è il padre, deve essere raggiunto dei rapprecci.
Cambia l'ordine, il concetto cambia.
Mi chiaro, attenzione ai rapprecci.
Quindi c'è un altro concetto, un occhio interessante.
Quelli significa che questo
non è il padre, è il figlio, è l'illusione ottile, è più chiaro, ne penti istintivamente, vi sarei aspettato, ma è semplicemente l'attività, l'idea, l'idea, no?
I genitori, già vi ho detto, sono realmente gli amici che sono in questo istituto,
che faccio con i crisi?
La risposta, segni la treccia.
A che serve la treccia?
Scoprire che il genitore, quello che viene dal genitore della treccia, ma questo lo dicevo in melle, ci siete?
Ma vi sto dicendo affin'altro le cose.
Questo è un genitore che ha un figlio, però non è la realtà, per avere un figlio bisogna dare due genitori, chiaro?
e quindi la lingua del genere si chiama elettitalità multi, che significa che il papà che ha qualcosa da dare al figlio, mentre la mamma è grande, trasferiscono qualcosa al figlio, cosa?
No, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no, no,
Si definisce eredità.
Tutto c'è più pubblico e tutto c'è più protetto.
Quella è eredità.
Ma non c'è che niente se sono metodi di eredità.
Una cosa è cercare le parole, perché questo passa.
Aspetta, aspetta, aspetta.
Verificiamo se avete capito.
Cos'è una eredità?
Non è una eredità.
cosa non è una realtà, tutti i membri privati.
Tanto è vero che quando parliamo di, giusto per avere un esempio compreso, patrimonio genetico, se passasse tutto del padre e della madre noi dovremmo praticamente mettere mezzo uno e mezzo l'altro,
Il nostro patrimonio genetico è una parte che arriva dalla madre, una parte che arriva dal padre, ma non tutti.
Perché se il padre non che la prende in merda, e invece il carattere della mamma che magari si mansovera, chiaro è passata una cosa odicevole.
Il concetto, io cerco di fare queste cose esasperate perché, vabbè, per esempio questo anno c'è Spoggio, spero che ti aiuti a ricordare, a capire, a fare una distruzione.
