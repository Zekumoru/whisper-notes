WEBVTT

00:00.402 --> 00:02.563
L'altro, l'uso di pericolazione.

00:02.803 --> 00:07.985
Quindi, in terza ci sono dei ragazzi che vi ho fatto conoscere.

00:08.345 --> 00:11.326
Uno era qui, l'altro era per il riconciato o l'influenza.

00:11.406 --> 00:14.167
Con una schierina, forse loro non l'hanno visto.

00:15.788 --> 00:16.368
Ma chi, Iari?

00:16.428 --> 00:17.489
No, lui no.

00:17.569 --> 00:17.929
In merito.

00:17.949 --> 00:19.389
Tu forse c'eri, chi è che c'era?

00:19.429 --> 00:19.850
In merito.

00:19.950 --> 00:20.790
Forse non c'era.

00:21.090 --> 00:21.910
Ma di terza?

00:22.891 --> 00:23.631
Di terza hai detto?

00:23.731 --> 00:24.151
Sì, sì.

00:24.211 --> 00:24.791
Iari?

00:25.012 --> 00:25.412
Iari, sì.

00:26.946 --> 00:45.834
e allora o uno o l'altro quindi fanno lo stesso lavoro che sta facendo lui quindi gli insegna in pratica misare come si fa siccome sono andati a svegliare questo punto di vista loro potrebbero fare lo stesso lavoro che poi te, facciare lezioni alla registra e poi ci sputaliamo

00:49.156 --> 00:53.819
le come lezioni, cioè, poi le condividiamo.

00:53.879 --> 00:57.481
A me così in pratica mi interessa il git.

00:58.922 --> 01:03.084
Quella è una cosa che poi, vorrei che facesse una lezione.

01:03.564 --> 01:05.686
Mi piacerebbe che voi mi metteste d'accordo.

01:05.866 --> 01:07.046
Ma sia git che chitab?

01:07.927 --> 01:09.648
Git, chitab, perché siete voi.

01:10.468 --> 01:11.389
Ma sono un po' di cose diverse.

01:11.629 --> 01:13.970
Tuttamente sono le stesse cose.

01:20.149 --> 01:27.252
Github è il sito che ti si interfaccia al programma, fondamentalmente.

01:27.412 --> 01:32.514
Infatti io posso avere un reposito di Github non su Github, ma su un locale.

01:33.394 --> 01:36.616
Non so, è la stessa cosa.

01:36.636 --> 01:37.156
Vi propongo...

01:43.937 --> 01:48.320
e ti dici mando!

01:49.161 --> 01:53.104
si dai, conoscetevi io vado a fare un bel... perché io sono venuto prima no?

01:54.204 --> 01:57.887
eh, mi chiedeva di venire, mi dicevi... e tuttanto lui arriva ieri!

01:58.207 --> 02:02.911
eh, ma... animale di un buco!

02:03.491 --> 02:04.912
vado, c'è un bel piattone!

02:05.152 --> 02:08.374
stasera vi faccio male!

02:08.815 --> 02:09.575
io lo faccio

02:18.085 --> 02:35.701
io sono ITP però non di questo indirizzo siccome sono carenti di questo indirizzo non ci sono perché non vengono per 800 euro a scuola ma vanno a lavorare in azienda io sono un ITP di laboratorio ma di indirizzo commerciale quindi non so un cazzo di quello che sta dicendo lui

02:36.223 --> 02:39.424
Stava a posto.

02:39.664 --> 02:46.527
Sì, però per quanto riguarda andare in laboratorio, portarvi in laboratorio io vi ci porto tranquillamente.

02:46.627 --> 02:49.548
Lui mi darà delle istruzioni, spero.

02:49.588 --> 02:51.829
Voi le sapete seguire meglio di mio grido.

02:52.709 --> 02:58.171
Quindi l'aiuto mio e il supporto c'è, però per me è un stroboto.

02:58.211 --> 03:02.173
Poi mi vedrete prendere dei punti perché sto imparando anch'io.

03:02.493 --> 03:05.014
Man mano che lui mi dice qualcosa inizio

03:06.397 --> 03:11.459
Ho fatto sempre solo commerciale, grafica, moda e commerciale.

03:11.639 --> 03:15.181
L'altra parte.

03:15.341 --> 03:16.862
Diametralmente zero.

03:17.522 --> 03:30.768
Quando sono stata a scuola, quando mi sono diplomata io nel 1994, che ho 48 anni, questo che esiste adesso non c'era, non esisteva.

03:30.868 --> 03:33.549
Quindi anche io ho fatto l'indirizzo programmatore

03:34.213 --> 03:41.319
era la prima classe, il primo anno sperimentale di programmazione e i professori non esistevano.

03:41.339 --> 03:54.210
Quindi c'era il tizio di turno che magari ha iniziato, che cos'è, il computer, come funziona, classico materiale dottrinale delle TIC, diciamo, grossolanamente.

03:54.270 --> 03:56.692
Quindi, niente, io vi voglio aiutare.

03:57.392 --> 03:59.354
Già ho il timore e il terrore del prof.

03:59.970 --> 04:03.171
Poi ci fai l'abitudine.

04:03.231 --> 04:04.891
No, perché mi mette l'ansia.

04:05.011 --> 04:11.573
Già so che il suo giudizio mi ha... Sì, sì, è il giudizio divino.

04:12.073 --> 04:13.093
Ma sai cosa?

04:13.433 --> 04:18.655
Io non sono così, sono molto attiva, il laboratorio mi piace fare, voi non mi potete far fare un cazzo.

04:20.267 --> 04:45.694
io entro in laboratorio, ragazzi accendete, andiamo a bere, andiamo a fare la fattura sì no, naturalmente cercherà un approccio nel senso lei ci può fare più la parte, lui ci può fare più la parte teorica e poi andremo in laboratorio e voi la considerete, perché con me in laboratorio lo farete, perché sto qua per questo vabbè, magari lui cerca anche di coinvolgerti con le tue... sì sì no, ma lui infatti ma... le mani, infatti, lui è un pezzo di una madre

04:45.974 --> 05:12.820
perché l'anno scorso avevamo un ragazzo che anche lui aveva fatto commerciale per riuscire a integrare anche lui stavamo facendo un lavoro su statistica con le matrici poi anche stava cercando di... a me dispiace fondamentalmente c'è già meno male che ci andiamo... no no ma quello che mi riguarda, cioè andiamoci in laboratorio, lavorate, applicatevi

05:14.548 --> 05:41.540
vi aiuto per quel poco che riesco a capire ma sapete più voi che io il problema è il sistema di reclutamento docente perché se io sono commerciale tu non mi devi inserire dove non posso o dove non ci arrivo sto spiegando ai ragazzi i problemi del reclutamento del MTP ma li conosciamo già loro mi hanno detto che è un problema ormai cronico

05:42.880 --> 05:54.148
e a me dispiace perché vorrei dare una mano lo so ma sei pure perché mi sento inutile allo scorso aveva i capelli eh?

05:54.248 --> 06:06.137
oh poveretto no stavo spiegando a loro che io non sono così cioè io nel laboratorio mi animo è perché quello che faccio però qua

06:07.216 --> 06:33.087
Io sto prendendo appunto, ieri ho imparato tantissimo e a dire il vero ho scaricato XAMPP non capisco niente, l'ho scaricato, ha funzionato però piano piano mi metterò, cioè farò lo stesso che fate voi cercherò di adeguarmi, magari così può essere che negli anni mi formo e poi saprò fare bene

06:35.060 --> 06:41.423
visto che già l'anno scorso mi era arrivata una suplenza e io la rifiutai perché io non mi sono sentita.

06:41.443 --> 06:48.227
Ma guarda, io te lo dico, di che qui è arrivata... c'è stata una miniatura... l'hai conosciuta forse l'anno scorso?

06:48.387 --> 06:53.049
No, in quarta... sì, dovrebbe essere in quinta quest'anno.

06:54.690 --> 07:02.954
Mi è arrivata un suplente... no, uno studente e... un po' più che quello di te.

07:03.014 --> 07:04.175
Ma scusa, quello con gli occhiali?

07:05.111 --> 07:05.851
Dei capelli rundi?

07:06.691 --> 07:09.012
No... Ma come si chiamava poi per l'Alzheimer?

07:09.032 --> 07:10.292
Come si chiamava il ragazzo?

07:10.432 --> 07:12.553
E' venuto... No, come si chiamava?

07:13.813 --> 07:18.074
Lui praticamente aveva rifiutato una suplenza al Conti.

07:19.395 --> 07:20.635
Come si chiamano i lavoratori?

07:20.695 --> 07:21.095
Interconti.

07:21.315 --> 07:21.855
Il motivo?

07:23.896 --> 07:25.076
Ero ragioniero del programma Azzurra.

07:26.712 --> 07:55.701
e io sono stata io l'anno scorso a letto le conti non sapeva niente tutto è fatto si è scritto qui ma come studente infatti hai detto ma scusami Nessi non ha fatto i conti cioè che poi era un carino hai perso un lavoro hai perso è chiaro che dici vabbè aveva dell'altro dice sì però io non me la sono sentita di accettare quelle cose perché chiaramente non ero in condizione di fare quelle cose poi si è fatta la terza

07:56.940 --> 08:07.809
Con lui ho fatto anche il TPSI e ha visto quel tipo di programmazione che... ...teni conto che lui già aveva base di programmazione.

08:09.250 --> 08:09.630
Chiaro.

08:09.650 --> 08:13.073
Stiamo parlando di tanti anni fa.

08:13.654 --> 08:15.996
Io quello che c'ho lontano, 94, mi sono diplomata io.

08:16.016 --> 08:16.816
All'epoca era la prima...

08:25.635 --> 08:52.770
classe sperimentale di informatica quindi anche i docenti non è che erano... però ci sto pensando lo sai che questo fatto proprio ieri pensavo a iscrivermi magari a fare un corso cioè iscrivermi proprio a scuola per prendermi per fare io ti dico quell'esperienza che infatti anche lui ha detto ma attraverso lui era dentro anche perché poi

08:54.329 --> 09:01.030
Era nel mondo gestionale, la domanda che hai fatto a te, dimmi quali sono i tuoi punti di forza e quindi cerchiamo di lavorare sui punti di forza.

09:01.891 --> 09:22.095
Il discorso del gestionale, lui aveva lavorato sui gestionali, quindi aveva già delle altre basi, e poi ovviamente aveva anche basi di programmazione, infatti tante cose, tipo i cicli del spiego,

09:23.312 --> 09:34.854
E poi niente, una delle cose che faceva, che poi tra l'altro erano tra i più anziani, ecco perché dico non mi fido di lui perché ancora è uno scappato da casa, come non mi fidavo di lui?

09:34.914 --> 09:38.035
Adesso poco poco, perché?

09:38.355 --> 09:41.835
Perché vengono a cerare perché sapendo che non si fa un cazzo, punto.

09:42.756 --> 09:49.377
Poi incontrano me, gli faccio il culo e poi dicono forse hai due possibilità, uno che ne va al Giorgi,

09:50.538 --> 10:18.306
liceo informatica e non si fa un cazzo prima rimandavo a Sesto infatti quella scuola è chiusa lo Spinelli, sì l'ITIS di Sesto, Serare c'erano i pentrinelli eravamo gli unici c'erano i pentrinelli tutti se ne andavano quella era una scuola che io non consideravo una buona scuola quella è chiusa io sono ancora qui

10:20.672 --> 10:33.804
non so per quanto, perchè se qua andà al circolo... è moltificante, è moltificante, effettivamente quindi, o vuoi imparare, se vuoi imparare, pressa se vuoi prendere un pezzo di carta, soffrirai?

10:36.386 --> 10:39.769
questo per altri motivi, per una cosa è certa, cioè

10:42.697 --> 10:43.577
Non sarà facile.

10:43.777 --> 10:46.678
Adesso facciamo la lezione come dicevamo, no?

10:46.978 --> 10:55.659
Perché adesso, tranne te, gli altri vengono da... e anche tu, da tenerla svegliata, un po' di più rispetto ad un sforzo.

10:56.599 --> 10:59.020
Meno spolastico, eh?

10:59.660 --> 11:01.040
Perché stai volando un bacio.

11:01.380 --> 11:04.961
Ho visto quello che mi hai dato, potete fare di più.

11:05.021 --> 11:08.582
C'è una cosa che mi piacerebbe che voi facesse stasera.

11:08.622 --> 11:09.542
Vediamo come partiamo.

11:12.989 --> 11:17.530
Non avrete involuto qualcosa in più sulle eccezioni.

11:17.550 --> 11:29.635
Io ho detto che le eccezioni è una cosa che vi ritroverete dappertutto indipendentemente dalla presenza a scienza della programmazione degli oggetti.

11:29.655 --> 11:32.856
E' un modo di valore male che dovete acquisire.

11:32.997 --> 11:36.658
Io ho visto che Yusuf ha usato le eccezioni nel suo esercizio.

11:37.190 --> 11:37.670
E non c'è.

11:37.910 --> 11:49.175
Ah, sì, no, no, va benissimo, però ti chiedo, non voglio che sia soltanto uno spot, vorrei che, come io ho detto l'argomento, non è banale.

11:50.876 --> 11:54.978
E banale sono tre parole, tre che c'è troppo.

11:57.609 --> 12:00.570
C'è tanto altro, adesso cercherò di prenderlo.

12:01.970 --> 12:04.371
Però è un modo di radionare che dovete, di pensare.

12:05.392 --> 12:06.592
Non ho fatto la cosa.

12:07.312 --> 12:08.032
Ne serve niente.

12:10.193 --> 12:13.774
E poi, come progettino, un po' di ingredienti ce li abbiamo.

12:15.355 --> 12:17.955
La cosa che noi avevamo chiesto l'anno scorso.

12:18.015 --> 12:23.917
Vorrei che cominciate a pensare alla classe carrello.

12:24.598 --> 12:25.458
Carrello della spesa.

12:27.029 --> 12:55.363
attenzione, non vi chiedete come fare un carrello della spesa fate un lavoro iniziale quando non conoscete, quando viene chiesto qualcosa che non conoscete a questo punto fate le dovute ricerche per capire cos'è un carrello, come funziona anche perchè poi i carrelli scattano il meccanismo lo usiamo per fare le pesce online in automatico, diciamo che so cos'è

12:56.016 --> 12:56.576
No, usi.

12:58.798 --> 13:00.259
Come dire, so guidare, sì.

13:01.460 --> 13:07.464
Se non hai mai aperto il Copan, è inutile guardarci dentro, inizia a trovare le cose.

13:07.644 --> 13:14.248
Quindi, farti un'idea di cos'è un carrello, e poi ecco se vuoi presentare questo carrello.

13:14.468 --> 13:22.273
Questo mi serve per il futuro, perché questo modo di ragionare, di approcciare, e voglio la classe,

13:23.545 --> 13:42.262
perché questo ha a sostenere il fatto che io comincio a crearmi tutta una serie di classi che mi serviranno per generare obiettivi che dovrebbero utilizzare nell'applicazione.

13:42.382 --> 13:44.905
Sì, come l'hanno scorto, una certa pavizia.

13:47.614 --> 13:59.999
quindi questo mi piacerebbe, tipo per esempio, un'altra cosa che mi piacerebbe fare, nella venuta di demo, se ci pensate, sito di commercio elettronico, i prodotti, no?

14:00.960 --> 14:06.902
il concetto di prodotti, che più può essere mai il concetto di prodotti, una classe, ma che no?

14:08.948 --> 14:34.577
nel senso che non esiste il concetto prodotto perché non esiste un prodotto, esiste la bottiglia d'acqua come esiste il piatto di pasta però acqua e pasta hanno qualcosa di comune quindi il concetto di prodotto è la generalizzazione della bottiglia di acqua e anche qui questo è il liquido, quello è il solido

14:36.658 --> 14:38.960
Volete progettare una gerarchia?

14:38.980 --> 14:40.622
Inventatevi pure qualche cosa.

14:41.203 --> 14:43.165
Vi ho appena dato un suggerimento.

14:43.185 --> 14:46.568
Invece di parlare delle solite forme, parliamo ovviamente dei prodotti.

14:47.829 --> 14:52.974
Mi creo uno schema, la schematizzazione di un albero di prodotti.

14:54.475 --> 15:07.601
albero gelattico, con un concetto generale, il prodotto, che non esiste in natura, servo soltanto per dare un'idea, e poi le varie forme di specializzazione.

15:07.781 --> 15:13.284
Qui si applicano tutti i criteri, i concetti di ereditarietà.

15:14.845 --> 15:18.987
Il primo alpesmo, chiaro, lo andremo ad applicare in un momento in cui si chiama applicazione.

15:20.465 --> 15:27.088
e quindi io predispongo tutto l'impianto per una ipotetica applicazione.

15:27.148 --> 15:27.908
L'applicazione non c'è.

15:30.049 --> 15:38.192
Devo progettare per classi un discorso delle prove, il discorso di avere il main, di avere il main.

15:38.212 --> 15:45.215
A me interessa che progettiate le classi che potranno essere utilizzate.

15:46.440 --> 16:12.853
trovare, questo non è una cosa di fare, parlatene tra di voi, tanto siete pochi, tipo uno si occupa del carrello, l'altro si occupa del prodotto, l'altro si occupa, non lo so, della questione degli accanto, cioè un'idea su cui poter lavorare e quindi preparare tutta una serie di classi che ci potranno servire in tanti ambiti differenti.

16:14.125 --> 16:24.907
se voi progettate il carrello, state tranquilli, poi ti chiedo la stessa cosa di farlo in PHP, poi ti chiedo di farlo in Java, ti chiedo di fare un coltanto usato di fatto.

16:27.628 --> 16:34.709
Quindi cominciamo a materializzare noi i concetti realizzando qualcosa di concreto.

16:35.589 --> 16:39.490
L'altra cosa su cui stavo riflettendo era cos'è un sensore?

16:43.750 --> 16:49.972
Ok, la classe, sensore, però ci sono il sensore di temperatura, il sensore di umidità.

16:49.992 --> 16:55.793
Il concetto di sensore esiste, non ha senso di esistere da solo.

16:58.154 --> 17:04.775
Serve per dare un'idea iniziale, però non è dettagliata, non serve a niente dal punto di vista pratico.

17:05.035 --> 17:06.656
Mi dà un sensore per fare cosa?

17:07.736 --> 17:08.016
Nulla.

17:09.717 --> 17:20.606
perché dovrò sempre specificare il tipo di sensore e poi entro nel merito, entro nel merito dicendo, ah sì, quali sono le caratteristiche?

17:21.547 --> 17:24.589
Quali sono le caratteristiche leggi che cosa trasforma?

17:26.070 --> 17:29.613
E' lì, capirete quando significa che è una classe.

17:30.073 --> 17:35.718
Le classi indossivano, questi sono i metodi di questa velocità, le proprietà.

17:37.887 --> 17:53.070
bisogna entrare nell'ottica appunto di presentare un qualcosa, un oggetto ma anche ci sono le altre, ma anche la componentista elettronica tipo la basetta, cosa ci metto su una basetta, versione di un biodo?

17:55.111 --> 17:55.831
resistenza?

17:59.411 --> 18:03.092
poi transistor?

18:06.053 --> 18:06.953
un convertitore?

18:08.490 --> 18:14.974
Cioè, se vi volete allegare, partite con qualcosa di concreto, non di sbagliare.

18:15.374 --> 18:21.697
Ripeto, sono stufo di sentirmi sempre appunto questa visione gestionale della pacienda, no?

18:22.618 --> 18:25.760
L'industriale è quello che lavora con i sensori, per capirci insomma, no?

18:25.780 --> 18:31.403
Non è che a volte ci senti che hai il prodotto, la spesa, il consumo, e giusto.

18:32.623 --> 18:34.264
E' più facile per quelli che li sentono, no?

18:36.185 --> 18:36.646
Però...

18:38.550 --> 18:39.670
o plastica.

18:39.690 --> 18:42.931
Se possiamo anche inventarci qualcos'altro, meglio.

18:43.731 --> 18:44.931
Vabbo, torniamo a noi.

18:45.852 --> 18:46.652
Torniamo a noi.

18:47.552 --> 18:55.854
Me volevo riprendere quello che ci siamo detti l'ultima volta.

18:57.394 --> 19:01.275
Allora, faccio sempre il sintesi di quello che abbiamo detto.

19:01.875 --> 19:05.496
Allora, abbiamo parlato ovviamente di gerarchia,

19:12.108 --> 19:15.252
Poi abbiamo parlato con relativa eredità.

19:23.682 --> 19:26.245
Poi abbiamo parlato di polimorfismo.

19:38.699 --> 20:04.972
con l'introduzione delle funzioni virtuali poi a questo punto abbiamo parlato di grazie astrate e quando abbiamo parlato di grazie astrate abbiamo parlato di funzione pure

20:06.663 --> 20:32.859
Ok, penso per quanto riguarda, abbiamo aggiunto anche un certo esempio di interfaccia, però attenzione, il C++ non è dotato dell'interfaccia, io diciamo ho abusato nell'uso del termine interfaccia, perché non esiste l'interface del C++, interfaccia

20:34.133 --> 21:01.959
il concetto di interfaccia è incontrato in Java, in C per interfaccia c'è una simulazione dell'interfaccia e quindi per associazione io posso dire che è un'interfaccia come quella del Java, perché li esistono in C non esiste l'interfaccia come concetto però può ottenere lo stesso effetto come

21:02.998 --> 21:09.461
creando la pasta stratta e ponendo tutti i metodi e inserendo solo metodi puri.

21:11.262 --> 21:11.602
Chiaro?

21:11.942 --> 21:21.006
Quindi è una simulazione che viene fatta, ma non esiste il concetto di interfaccia in JavaScript.

21:21.046 --> 21:28.049
Questo ovviamente, e completiamo il discorso, la volta scorsa abbiamo parlato di un argomento

21:31.565 --> 21:38.729
di un argomento che non era esattamente legato alla problemazione degli oggetti.

21:39.929 --> 21:46.453
Il discorso dell'incessione vi ha detto che ci consente di risolvere un problema.

21:47.113 --> 21:58.139
Il problema che ci consente di risolvere, ha voluto separare il coro dell'applicazione dalla gestione degli errori.

21:59.249 --> 22:10.432
Quindi un programmatore in pratica prima, quando non c'erano le eccezioni, si sviluppava l'applicazione e si gestiva in tutti i casi tutte le criticità dell'applicazione.

22:10.492 --> 22:12.493
L'obiettivo è aumentare la produttività.

22:26.031 --> 22:54.320
e quindi praticamente mantenere il programmatore concentrato sul coro del problema e quindi cercare di svincolarlo dalla gestione delle eccezioni che lo avrebbero potuto distrarle e quindi ovviamente avrebbero inevitabilmente rimentrato la produttività perché se faccio cose non posso fare le altre

22:55.612 --> 22:57.953
Quindi scorpono dei concetti.

22:59.394 --> 23:01.095
Come è stato risolto il problema?

23:01.435 --> 23:08.498
Invece di gestire un'anomalia, semplicemente segnalarla.

23:10.259 --> 23:13.680
E a questo punto abbiamo detto viene sollevata un'eccezione.

23:14.261 --> 23:22.805
Sollevare un'eccezione, abbiamo detto, significa appunto segnalare la presenza di un'anomalia.

23:24.247 --> 23:40.735
L'anomalia può essere, appunto, tipo, realizzare un'applicazione di varie serve oppure un'applicazione che prevede la stampa, prima anomalia, ma la stampante è spenta, seconda anomalia, la stampante è una carta, terza anomalia, la stampante non è il toner.

23:40.755 --> 23:45.637
Sono tutte anomalie e questo non significa che l'applicazione non sta funzionando.

23:46.617 --> 23:52.300
Sono tutte delle situazioni che io, che sviluppo l'applicazione, devo gestire perché so che succederà.

23:53.450 --> 23:57.914
Queste sono quelle prevedibili o ci sono quelli imprevisti quando succede e succede.

23:58.654 --> 24:13.647
Però il programmatore dovrebbe, ogni volta che scriva l'applicazione, a questo punto essere vigente, immaginare tutta una serie di scenari possibili e cercare ovviamente di organizzare dei piani di intervento.

24:14.868 --> 24:16.049
Questa è la perdia di tempo.

24:17.771 --> 24:27.114
quali sono le cose che potrebbero funzionare, quali sono gli anni di intervento, se faccio questo non penso all'applicazione.

24:27.154 --> 24:29.834
Il senso delle cose, è chiaro?

24:31.335 --> 24:42.318
Mi piacerebbe che voi facessero una domanda di questo genere, accetto i GPT, confermare cosa o smentire

24:44.512 --> 25:00.465
Quello che vi ho appena detto, è vero, posso interpretare il concetto di eccezione in questo modo, in due punti, così come per lo descritto, per poi capire che tipo di risposte ci darà lui.

25:01.086 --> 25:13.096
A noi non c'è niente, il discorso è, sono queste le domande che dovete fare, se volete ovviamente fare degli approfondimenti, da inizio dell'anno che ve lo ripeto, non cos'è un'eccezione,

25:14.082 --> 25:15.824
Doria che ti ha detto bisogna eccezionare.

25:17.285 --> 25:19.446
Però, perché esistono eccezioni?

25:19.467 --> 25:22.289
Quale è lo scopo?

25:22.689 --> 25:23.450
Quando si usano?

25:24.230 --> 25:25.692
In effetti non sempre si usano.

25:25.992 --> 25:29.515
Attenzione, con le eccezioni c'è un sovraccarico.

25:31.016 --> 25:41.905
In gestione d'eccezione ovviamente c'è un sovraccarico e quindi non sempre conviene utilizzare in pratica

25:45.006 --> 25:47.647
All'eccezione.

25:47.687 --> 25:52.309
Sarebbe interessante scoprire perché si dice che c'è un colso per il carico.

25:55.090 --> 25:55.490
L'over-red?

25:56.051 --> 25:56.571
L'over-red.

25:58.732 --> 25:58.992
Sì?

25:59.952 --> 26:01.413
Sì, ma chissà la roba.

26:01.473 --> 26:04.254
Il problema è perché c'è solo il carico.

26:04.614 --> 26:08.716
Perché sono cose che si potrebbero anche evitare se funzionasse tutto bene.

26:09.056 --> 26:09.356
No, no.

26:09.816 --> 26:12.598
C'è tanto denosio, te l'ho detto, informatica, niente per caso.

26:14.316 --> 26:43.639
e se ti apri per la pagina tu vedi i radontamenti ma no non sto capendo nel senso che non è una battuta è giusto quello che dici quando io ti dico le devo toccare è come se ti chiedessi di quale bit di quale byte dove si trova indica non basta dire no perché

26:44.224 --> 26:58.834
perché ci sono istruzioni che ci... no, non sono soltanto istruzioni... vabbè, non devo fare la cosa, anche perché l'argomento, serve molto più semplice spiegare questo argomento, cioè, però hai il concetto di processo?

26:59.295 --> 27:00.075
Sì.

27:00.135 --> 27:00.435
Ok.

27:02.657 --> 27:04.898
Ma anche il concetto di chiamata a funzione?

27:05.579 --> 27:05.979
Sì.

27:05.999 --> 27:08.761
Quando chiamo a funzione, io di fatto che faccio in pratica.

27:09.522 --> 27:12.344
Ti dico una cosa che, effettivamente,

27:30.227 --> 27:32.128
per fare una chiamata funziona bisogno dello stack

27:51.380 --> 27:59.647
di percussioni e succederà qualcosa.

27:59.867 --> 28:10.555
Se avete fatto le call in assembler, sapete che esistono.

28:10.615 --> 28:15.499
Se vi ricordate come funziona una corda, dovreste capire tante cose, cioè la conseguenza della call.

28:16.540 --> 28:19.563
La conseguenza di una call provoca l'aggiornamento di tutti quanti registri

28:21.815 --> 28:22.936
e quindi cambi contesti?

28:23.976 --> 28:25.557
Ok, quello non lo vedo.

28:29.499 --> 28:36.142
Faccio la chiamata, coinvolgo lo stack, faccio tutto quanto l'apprendimento, carico i dati, ok, sto perdendo tempo.

28:37.823 --> 28:43.766
Gli FT ne discorso delle chiamate a funzioni, ci sono tanti vantaggi, però ci sono anche tanti vantaggi.

28:43.826 --> 28:46.208
In informatica niente grande, tutto un corso.

28:46.668 --> 28:47.508
Ti piace quello?

28:47.628 --> 28:48.669
Ok, quanto costa?

28:49.849 --> 28:50.870
Quali sono le conseguenze?

28:52.796 --> 28:56.618
A parte la funzione, all'interno della funzione, quando finisce la funzione?

28:57.318 --> 29:02.080
Se ragionate in termini di assembler, quando trovate la parola RET, ok?

29:02.240 --> 29:05.842
Anche le funzioni hanno la parola RET in fondo, la parentesi di graph è chiusa.

29:06.742 --> 29:06.942
Ok?

29:08.903 --> 29:17.706
Nei momenti in cui io termino la funzione, in più faccio il ritorno allo tech, perché devo sapere dove andare a tornare, perché se no non so tornare.

29:18.427 --> 29:20.788
Lì c'è il diritto di ritorno e il ritorno.

29:22.303 --> 29:25.125
riaggiò ad un punto e riparte.

29:28.266 --> 29:33.189
L'eccezione, di fatto, diciamo, è una return forzata.

29:33.609 --> 29:36.511
Perché?

29:37.311 --> 29:38.472
Io non completo la funzione.

29:39.652 --> 29:40.953
Non aspetto di arrivare alla fine.

29:41.713 --> 29:44.155
Devo uscire prima, perché c'è il problema.

29:44.935 --> 29:47.556
Bene, da quel momento in poi vado nello sec.

29:49.297 --> 29:50.078
Vado nello sec,

29:53.404 --> 29:58.925
c'è un redd, faccio tutto quello che devo fare dice ma lo redd dove è?

30:00.045 --> 30:12.608
se lo gestissi io, quell'errore sarebbe sufficiente che io ci mettessi un info sarebbe sufficiente che io ci mettessi il messaggio l'errore, dice guarda che è successa questa cosa no?

30:14.528 --> 30:22.050
e quindi praticamente è il programmatore che ha messo l'if per messaggio evitandomi di tornare nello stack

30:23.644 --> 30:26.385
Quindi risolvo tutto in place.

30:27.286 --> 30:27.906
Esatto.

30:28.346 --> 30:31.487
E aspetto soltanto la naturale uscita.

30:32.668 --> 30:32.988
È chiaro?

30:34.149 --> 30:44.593
Quindi le eccezioni possono anche essere utilizzate per fare, se adeguatamente programmate, anche le riuscite forzate e tradiversali, no?

30:46.886 --> 30:51.910
Dichiaro, se io decido di fare rettabilmente, è chiusura naturale, no?

30:52.731 --> 30:57.615
Ma questo punto è chiaro, con l'incezione posso anche fare trovo.

30:57.695 --> 31:00.177
E ritorni a una stringa, ritorni a quello che vuoi, sì.

31:01.077 --> 31:05.781
Entriamo nella programmazione creativa, eh.

31:05.841 --> 31:08.904
Io di fatto l'ho scoperta quando ho avuto bisogno di quello.

31:09.264 --> 31:12.006
Io non potevo ritornare quello che tornava alla funzione.

31:12.646 --> 31:13.907
E infatti è uscita a sporco.

31:14.088 --> 31:14.428
Esatto.

31:15.293 --> 31:17.695
Mi sono sentito sporco di fatti!

31:18.816 --> 31:22.219
Questo significa il discorso della professionalità, no?

31:24.000 --> 31:29.405
Professionalità ovviamente è utilizzata in questo momento secondo i propri fini.

31:30.766 --> 31:36.430
Io so che una funzione, vi ho sempre detto, se deve restituire un intero, il intero deve uscire.

31:37.972 --> 31:38.452
Ci senti?

31:39.933 --> 31:43.236
Attenzione, qui vi sto dicendo che quella funzione è un pocheggioso.

31:46.161 --> 32:07.377
è chiaro che non certo però ripeto la chiudo qui perché questo è un approfondimento che poi prendo in considerazione soltanto a certi livelli quindi si produrre colce sporco per i propri fini detto questo

32:09.565 --> 32:37.071
e quindi c'è il mondo e le eccezioni sono un mondo infatti quando ritorna sullo steak e lui ritorna sul problema principale e lì il problema principale va alla ricerca e il sistema va alla ricerca del case una cosa è certa blocco la funzione blocco il problema principale sono questi meccanismi che dovete capire

32:39.236 --> 32:46.400
Per queste cose, ve l'ho detto, la terza, la carriera, è la quarta quella tosta.

32:48.461 --> 32:52.564
Ti facevo minchiate, una scamba, se vuoi fare così.

32:55.005 --> 32:57.826
Perché è la quarta, l'anno più impegnativo.

33:00.068 --> 33:01.328
Eccezioni, va bene?

33:02.069 --> 33:02.189
Ok.

33:03.490 --> 33:15.900
da dove riprendiamo stasera, però che vi chiedevano di fare appunto, se non in un laboratorio, prima di fare i tattori e i pettini, fate fare un pochettino, chiedevi di farvi gli esercizi.

33:17.942 --> 33:25.728
Invece volevo fare un'altra cosa, parlare del futuro, il futuro inteso in questi termini.

33:26.628 --> 33:26.929
Allora,

33:28.653 --> 33:40.290
in unica futuro, una delle altre cose che vi ho chiesto, però ripeto, non mi state dicendo, non vi dico perché, una delle cose che vi ho chiesto di fare è cominciare a guardare la riferia standard del setieno.

33:45.257 --> 33:47.219
La richiesta aveva lo scopo.

33:47.359 --> 33:58.870
Lo scopo vuoleva, in pratica, ragionare in termini di persona che ha a disposizione un pacchetto di classi che dovrà scegliere all'interno della propria applicazione.

34:01.272 --> 34:10.561
E poi dicevamo, in pratica, si, cominciate con due stringhe e poi, detto,

34:16.142 --> 34:24.165
Poi vi ho detto anche un'altra cosa, l'obiettivo di questa richiesta, tant'è vero che poi vi ho dato, vi ho detto anche un'altra cosa, vi ho detto come si studiano le classi, no?

34:25.165 --> 34:31.187
Se io devo studiare una nuova classe, è chiaro che l'importante è la implementazione, lo scopo della classe.

34:33.168 --> 34:40.611
Ecco, secondo le cose che devo fare praticamente sono i costruttori fondamentali per capire come deve usare quella classe.

34:40.811 --> 34:44.712
Proprietà, che messi insieme costituiscono l'interfaccia

34:45.256 --> 34:46.776
della classe e del futuro oggetto.

34:48.857 --> 34:51.338
Questo lo scopra questo.

34:53.158 --> 34:55.499
Io lo chiamo studio guidato.

34:56.299 --> 35:03.482
Sono queste le cose che non parlano mai nei corsi di informazione del professore e che sono intese per fare queste cose, per fare i mestieri.

35:05.102 --> 35:08.723
Se non lo fate, se lo fate per la prestazione, avete sbagliato tutto.

35:09.684 --> 35:09.904
E voi?

35:11.608 --> 35:18.731
Poi per noi è chiaro, quello che mi consegnate è tanta roba, però non è quello che voglio.

35:20.471 --> 35:21.211
Qui qui ci siete?

35:22.292 --> 35:27.474
Attenzione, io mi volevo sapermare proprio su queste due classi.

35:29.014 --> 35:37.237
Qui c'è, ci sono delle differenze concettuali tra la classe strenge e la classe vector.

35:39.036 --> 35:39.596
Ci siete?

35:41.118 --> 35:53.607
La classe string è molto vicina al vostro modo di costruire le classi.

35:53.667 --> 35:58.131
Mi serve la classe string perché mi distingue le string e quindi disegno le classe string.

35:59.352 --> 36:04.116
Gli ingredienti fondamentali sono caratteri.

36:05.277 --> 36:07.739
L'ingrediente principale è il lavoro con i caratteri.

36:09.168 --> 36:12.750
Il discorso dei contadori, quello è la negativa, quello è la modernità.

36:13.090 --> 36:21.733
La cosa è certa, concettualmente io non so di lavorare con caratteri, solo esclusivamente caratteri.

36:22.334 --> 36:23.154
Chiaro?

36:23.354 --> 36:25.355
La stringa è fatta da caratteri.

36:27.916 --> 36:30.357
Questa è una visione tradizionale.

36:34.381 --> 36:54.079
tradizionale, detto per noi, cioè nel senso, una classe standard, un metodo di più che tra, poi l'implementazione, cioè, è realiente, puntata da lui, puntata da lui, c***o che c***o, c'è una cosa che cerca e so che il ingrediente principale, che ha lavoro che è il carattere, sono i caratteri, qui c'è una vector e qui le cose cambiano.

36:54.939 --> 37:01.145
Anche perché vector non è una classe tradizionale, è proprio il concetto

37:04.369 --> 37:07.710
Allora dice, cos'è un vetto?

37:10.632 --> 37:16.714
Posso dare una risposta immediata, è una risposta sbagliata, ma se non me la date, perché mi fermo in quali mani?

37:18.375 --> 37:22.617
Non è questo quello che voglio sapere, è la cosa più idiota che si possa dire.

37:23.998 --> 37:25.458
Io ve la devo dire, mi pagano.

37:29.664 --> 37:29.924
E' chiaro?

37:29.984 --> 37:38.127
Quindi questa è la risposta più uscola, assolutamente non andiamo a vivere in un mentino pure a 25.

37:38.227 --> 37:42.989
Lui infatti c'è diventato a beccare la risposta di altro.

37:44.910 --> 37:45.790
Fatte gli scherzi.

37:46.811 --> 37:49.092
No, non è tradizionale.

37:49.152 --> 37:51.412
Cos'intendo tradizionale?

37:51.553 --> 37:53.933
Intanto, praticamente, riflettiamoci bene.

37:54.974 --> 37:57.395
Questa è la classe vector e quindi

37:58.753 --> 38:08.735
La classe evento, se l'avete studiata, se l'avete studiata, sicuramente non l'avete studiato, questo aspetto.

38:09.415 --> 38:16.177
Vi ricordate la lezione sui vettori da dove abbiamo, come l'abbiamo introdotta?

38:17.177 --> 38:17.937
Cos'è un vettore?

38:18.517 --> 38:28.079
E io vi disse, una raccolta di elementi

38:29.008 --> 38:39.774
lo stesso tipo dimensione fissa contiguo gli elementi sono tutti quanti contiguo chiaro?

38:40.134 --> 38:46.877
questo è la re detto anche Roberto, va bene?

38:48.018 --> 38:56.843
attenzione il concetto di contiguità esiste anche qui dentro

38:57.905 --> 38:59.306
ed è fondamentale.

39:00.247 --> 39:02.669
Quali sono le operazioni che posso fare con Lolo?

39:07.093 --> 39:18.943
Inserisci Le canoni che sono inserimento Carica Caricamento del vettore con l'inserimento La ricerca Svuotare

39:24.167 --> 39:31.432
e il caricamento che abbiamo fatto praticamente lo facevamo sempre allo stesso modo partivamo senz'erro e andavamo avanti, va bene?

39:34.554 --> 39:34.994
perché?

39:37.616 --> 39:52.525
se è per tanti motivi, uno per tutti altrimenti perde un filo quindi praticamente se io devo fare il caricamento di questo fettore è chiaro, parto dall'inizio

39:54.432 --> 39:56.173
e vado avanti fino a prendere un trovo alla fine, no?

40:00.055 --> 40:11.082
Una delle cose che non avevamo mai fatto, e di fatto lo avremmo potuto fare, ma non aveva avuto molto senso, è cominciare a fare il tenimento della posizione centrale.

40:13.203 --> 40:14.584
Che sensuale!

40:16.885 --> 40:18.306
E' più comodo partire dall'inizio?

40:19.387 --> 40:23.609
Anche perché poi è giungo, ma dove è scritto che devo partire dall'inizio?

40:25.666 --> 40:28.186
è chiaro?

40:28.226 --> 40:51.270
l'altra cosa che abbiamo fatto è abbiamo fatto l'ordinamento del vettore e poi abbiamo visto degli algoritmi a questo punto questa è un'altra operazione che si può fare per poter ordinare dei vettori abbiamo fatto un'altra cosa

40:55.503 --> 41:18.675
abbiamo cercato di capire come si facevano gli scambi alla base di qualunque parlando ritmo c'era sempre uno scambio quindi abbiamo fatto l'ordinamento riflettiamo sempre sul vettore supponiamo che ad un certo punto io abbia un vettore ordinato

41:29.429 --> 41:50.652
Beh, se io ho un obiettore ordinato, a questo punto supponiamo che io abbia la possibilità, la possibilità di inserire un elemento, mantenendolo finamente.

41:52.695 --> 41:53.535
Questo che significa?

41:53.675 --> 42:01.258
Significa che supponiamo che mi arrivi il sette, il sette andrei a pensare in questa posizione.

42:03.039 --> 42:05.540
Siete?

42:05.580 --> 42:06.980
Questo che significa in pratica?

42:07.600 --> 42:17.684
Siccome quella posizione a sinistra c'è uno e lo devo mantenere, a destra è già occupato, ma è chiaro che potrei farlo, però ha un costo.

42:19.325 --> 42:20.205
Il costo è

42:21.178 --> 42:22.880
che dovrebbe spostare tutti gli elementi.

42:25.061 --> 42:26.462
Diamo questo conto a dove ci si spazia.

42:27.183 --> 42:27.784
Ci siete.

42:28.244 --> 42:40.274
In conseguenza tecnicamente l'inserimento in mezzo è oneroso, dicevamo una volta a Sforza, ma ancora più oneroso se dovessi inserire... All'inizio?

42:40.814 --> 42:41.074
L'uno.

42:42.435 --> 42:43.076
O al schizzo.

42:43.116 --> 42:49.061
Quindi questo significa analizzare le strutture dati, a uno schizzo abbiamo detto queste sono, così si fa.

42:49.679 --> 42:52.120
Adesso facciamo delle riprezioni, questo è più legato.

42:53.680 --> 43:02.402
E quando è iniziata anche questo, questo è ancora più anelloso, perché non spostare tutto quanto tutto viene a mettere la reina.

43:02.482 --> 43:04.063
Per ricavare poi il posto.

43:05.463 --> 43:07.023
Ci siete?

43:07.084 --> 43:08.564
Si può fare, chiaramente si può fare.

43:09.824 --> 43:10.965
Il problema è quanto mi costa.

43:12.925 --> 43:15.826
Ci siete?

43:16.066 --> 43:16.566
Benissimo.

43:19.307 --> 43:45.860
quando io parlo di vettori queste cose devono essere sottintese quindi non basta soltanto dire a questo punto è chiaro stesso tipo una certa dimensione fissa ma ha detto anche qualcosa altro va detto che praticamente sì, dimensione fissa

43:47.796 --> 43:48.837
Ha delle conseguenze.

43:50.998 --> 43:55.902
Tanto è vero che potrei anche credo di averlo fatto fare.

43:56.902 --> 44:00.705
C'è un'altra operazione che supponete che io voglia fare questo.

44:06.108 --> 44:06.828
Voglio accelerare.

44:09.530 --> 44:11.872
La cancellazione è onerosano perché?

44:13.141 --> 44:32.092
Perché a quel punto mi si crea un buco e quindi chiaramente se mi si crea un buco il problema è che devo entrare in tutti quanti i buchi è chiaro?

44:32.132 --> 44:41.757
Quindi sono tutte operazioni che noi non abbiamo mai fatto perché chiaramente eravamo concentrati sul funzionamento medio

44:43.120 --> 44:53.286
Però ci possono essere degli algoritmi che necessitano di soluzioni, cioè mi propongono situazioni di questo genere e quindi come posso fare?

44:53.726 --> 44:54.506
Devo gestirlo.

44:55.347 --> 45:06.373
La cosa è certa, quando dico devo gestirlo stiamo parlando di oneri, costi, si può fare un certo quanto mi costa.

45:06.926 --> 45:11.589
Ok, invece i tempi di riscossa, invece di essere immediati, saranno più lunghi.

45:13.551 --> 45:16.553
E tutto andare a vere, eh?

45:16.593 --> 45:18.334
Poi che ti aggiusti una cosa quanto possa.

45:20.275 --> 45:24.318
Perché qui è necessario, per esempio, il riposizionamento.

45:24.798 --> 45:34.845
Questo significa riflettere sulle strutture dati, ma non soltanto semplicemente indicando cosa fare, ma concentrandoci su come le potrò usare,

45:36.815 --> 45:38.236
No?

45:38.256 --> 45:43.538
Su quali sono le operazioni più onerose e meno onerose?

45:43.658 --> 45:44.038
Ci siete?

45:44.138 --> 45:44.399
Sì.

45:46.119 --> 45:46.499
Ok.

45:47.000 --> 45:50.441
Questa è la riduzione che stiamo facendo sul vettore.

45:51.762 --> 45:53.143
La struttura è ancora più semplice.

45:53.943 --> 45:56.164
È chiaro?

45:57.505 --> 45:59.085
A questo punto andiamo avanti.

46:03.332 --> 46:06.615
Rientra ovviamente nell'analisi dei problemi e delle situazioni.

46:09.117 --> 46:09.917
Torniamo al vetto.

46:10.338 --> 46:11.258
Cos'è il vetto?

46:13.620 --> 46:16.062
Lo devo immaginare come una cosa di questo genere.

46:18.264 --> 46:19.465
Una raccolta di elementi.

46:19.485 --> 46:28.051
Una raccolta di elementi dello stesso tipo.

46:28.251 --> 46:28.832
Attenzione!

46:30.067 --> 46:32.848
Dello stesso tipo significa anche un'altra cosa, in pratica.

46:38.609 --> 46:49.512
Ci possono essere altri oggetti, una raccolta di oggetti, una raccolta di numeri, di interi, di stringhi, una raccolta di qualunque cosa.

46:51.252 --> 46:53.493
È chiaro che se lo facessi in C

46:55.257 --> 47:01.060
sarei vincolato alle caratteristiche del vettore del C. Questo significa dimensione fissa.

47:01.340 --> 47:06.563
Con il Vettor mi dà invece la possibilità di avere una dimensione variabile.

47:07.644 --> 47:11.045
Quindi non è sempre obbligatorio fissare una dimensione fissa.

47:11.826 --> 47:14.287
Questo significa, a me lo rende il Vettor.

47:15.008 --> 47:15.388
Chiaro?

47:18.409 --> 47:19.670
Non ci interessa come lo fa.

47:20.410 --> 47:20.931
So che lo fa.

47:22.899 --> 47:30.821
Il discorso è, nel momento in cui io mi fongo il problema, nel momento in cui sono io a progettare la classe elettronica, allora sì, che devo sapere come si fa.

47:32.042 --> 47:40.664
Ma sì, ma quando praticamente uso una classe che ha progettato qualcun altro non c'è niente, so che funziona, punto.

47:40.964 --> 47:46.646
Detto questi, il discorso è

47:48.436 --> 47:57.062
La classe vector, abbiamo detto, non è tradizionale è un raccoglitore, tanto è vero, è ancora più strana, se ci pensate bene.

47:58.003 --> 48:01.365
La classe vector, da sola, la posso usare.

48:02.766 --> 48:04.687
La devo sembra abbinare a qualcosa.

48:04.707 --> 48:06.128
A un tipo.

48:06.209 --> 48:06.789
A un tipo.

48:08.890 --> 48:09.271
È chiaro?

48:10.231 --> 48:15.275
E quindi, già questo ci fa capire una cosa, che è, la classe vector

48:17.697 --> 48:22.839
prima di essere utilizzato va specializzato è chiaro?

48:23.579 --> 48:37.463
e la specializzazione non avviene specializzazione avviene metto dopo di che va bene?

48:47.139 --> 49:08.793
quindi è a questo punto che faccio questo è il tipo e qui c'è il nome io sono creato l'oggetto vector che sarà il contenitore di elementi di questo tipo, va bene?

49:11.135 --> 49:14.137
proprio il fatto che la classe vector

49:15.251 --> 49:43.361
per il motivo per cui la classe vector da sola non la posso usare se non aggiungo questa cosa specializzazione diciamo che concettualmente la classe vector non è altro che un contenitore contenitore di cosa di cosa possono essere oggetti sempre allo stesso tipo possono essere interi possono essere valori possono essere

49:44.557 --> 49:45.237
Qualunque cosa.

49:47.099 --> 49:47.499
E' chiaro?

49:50.581 --> 49:51.401
Più poi ci siete, no?

49:52.842 --> 49:58.186
Però attenzione, io che userò la classe vector, la uso per questo motivo.

50:02.509 --> 50:11.695
Per me la classe vector è sempre un contenitore di cui elementi sono tutti contigui.

50:12.515 --> 50:13.376
Questo significa che

50:15.527 --> 50:29.357
ci sarà sempre il punto 0, 1, 2, 3, quindi hanno mantenuto lo stesso punto e quindi ci possa arrivare il cono va bene?

50:30.458 --> 50:42.907
quindi a questo punto il discorso è, la classe Vettor non è tradizionale, in effetti la classe Vettor cambia nome viene detta

50:48.473 --> 50:53.497
ah il container è una classe container chiaro?

50:54.278 --> 51:12.873
è una classe container una classe container che significa in pratica una classe che contiene una serie di elementi attenzione a quello che sto per dire secondo la logica degli array e qual è la logica degli array?

51:14.175 --> 51:15.295
gli elementi di un array

51:17.117 --> 51:20.078
Sono concettualmente continui.

51:21.599 --> 51:29.982
Gli elementi degli arrei possono essere raggiunti direttamente attraverso l'utilizzo di un indice.

51:31.762 --> 51:42.146
Quindi se ho 50 elementi io posso raggiungere il ventonesimo elemento semplicemente indicandone la posizione.

51:43.346 --> 51:45.747
Questo è il senso del

51:46.753 --> 51:48.013
vettore della rea.

51:49.074 --> 51:51.595
La classe contene mi consente di fare anche questo.

51:52.255 --> 52:14.643
Una cosa certa, domanda, ma realmente i 50 elementi dove si trovano gli internazionali sono effettivamente uno accanto all'altro, per quanto riguarda i lettori degli interi, sì,

52:15.896 --> 52:19.418
per quanto riguarda quello di vector?

52:19.458 --> 52:19.578
No.

52:22.240 --> 52:23.741
Perché il senso s'angola per di?

52:25.241 --> 52:25.382
No.

52:28.363 --> 52:29.164
Una cosa è certa.

52:30.504 --> 52:43.152
Container significa appunto mantenere le caratteristiche della cittura di riferimento senza che necessariamente la realtà

52:44.301 --> 52:47.383
corrisponde a questa descrizione.

52:47.443 --> 52:57.009
Poi l'implementazione io la ottenga con un vettore reale, con un caso.

52:59.351 --> 53:08.356
Il messaggio è un container, contempore di elementi che vengono gestiti secondo la logica dei vettori.

53:09.597 --> 53:10.778
Scrivetevi la vostra cosa.

53:13.610 --> 53:14.010
E' chiaro?

53:16.291 --> 53:27.113
Se mantengo la stessa logica, 50 elementi, voglio raggiungere il 35° V34 e ci vado, accesso diretto.

53:29.193 --> 53:36.735
Mantengono la stessa logica, mantenere la stessa logica significa fare le stesse cose che facevo con gli array che c'è.

53:39.329 --> 53:52.277
attenzione ma quello è semplicemente l'illusione realmente quei 50 elementi potrebbero essere sparsi nella rama chiaro?

53:53.317 --> 54:06.285
poi se voglio vedere effettivamente dove si tirano quegli elementi poi apro la classe e vediamo dove stanno questi elementi però concettualmente a me non interessa concettualmente conosco la teoria sui vettori

54:07.239 --> 54:14.444
So che sono una raccolta di elementi dello stesso tipo, i cui elementi sono a loro volta uno accanto all'altro.

54:16.085 --> 54:16.786
Sono continui.

54:17.887 --> 54:25.532
So che posso raggiungere qualunque elemento del array formendo la posizione.

54:26.793 --> 54:30.896
Di conseguenza, se quello è un array, deve avere questi comportamenti.

54:31.976 --> 54:33.918
Il problema è, come stava implementato,

54:34.901 --> 54:41.823
Il problema è, ma gli elementi sono realmente contigli e posizionati in un termine di arame per poterlo sapere dove aprire l'obiettivo.

54:44.003 --> 54:47.604
A noi non interessa, a noi interessa sapere che funziona.

54:49.765 --> 54:56.987
Chi usa quella classe è chiaro, dice ok, mi sta dicendo che quella classe è una classe Vector che posso gestirla come se possano avere un chip, perfetto, la uso.

54:59.048 --> 55:00.488
Non so come viene implementata.

55:02.259 --> 55:02.600
E' chiaro?

55:03.401 --> 55:10.433
Quindi un container implementato secondo le regole del vector.

55:11.034 --> 55:12.276
Cosa vuoi dire questo?

55:37.623 --> 55:38.904
Beh, ce ne sono delle altre.

55:40.084 --> 55:47.768
List, the queue, eccetera eccetera eccetera.

55:49.308 --> 55:49.889
E cosa sono?

55:51.369 --> 55:51.930
Vector.

55:55.411 --> 55:56.792
Ma anche vector non contiene?

55:58.593 --> 55:59.293
Ma che significa?

56:01.772 --> 56:28.063
Se avete guardato, se avete avuto modo di guardare, vi scoprite verodissima, anticipali, che quando parliamo di list, di container, tutti hanno luce pop, luce inserisce pop per sé.

56:33.217 --> 56:34.178
perché cazzo ne hanno fatti quattro, cinque, sei?

56:34.198 --> 56:35.278
perché cazzo ne hanno fatti quattro, cinque, sei?

56:35.298 --> 56:36.699
perché cazzo ne hanno fatti quattro, cinque, sei?

56:36.719 --> 56:37.840
perché cazzo ne hanno fatti quattro, cinque, sei?

56:37.860 --> 56:39.241
perché cazzo ne hanno fatti quattro, cinque, sei?

56:39.261 --> 56:40.982
perché cazzo ne hanno fatti quattro, cinque, sei?

56:41.002 --> 56:46.285
perché cazzo ne hanno fatti quattro, cinque, sei?

56:46.325 --> 56:49.507
perché cazzo ne hanno fatti quattro, cinque, sei?

56:49.547 --> 56:51.728
perché cazzo ne hanno fatti quattro, cinque, sei?

56:51.748 --> 56:52.769
perché cazzo ne hanno fatti quattro, cinque, sei?

56:52.789 --> 56:55.611
perché cazzo ne hanno fatti quattro, cinque, sei?

56:55.671 --> 57:00.574
perché cazzo ne hanno fatti quattro, cinque, sei?

57:00.594 --> 57:01.895
perché cazzo ne hanno fatti quattro, cinque, sei?

57:01.915 --> 57:02.175
perché caz

57:03.187 --> 57:10.069
perché sennò non capite le cose è chiaro?

57:10.109 --> 57:29.734
prima risposta hanno voluto utilizzare push e pop per ovviamente agiocolare il programmatore che si è già abituato al concetto di push al concetto di pop push significa dog, dipende dal container pop significa stripe da dog, dipende dal container

57:32.458 --> 57:33.718
chiaro?

57:33.738 --> 57:43.182
quei meccanismi li ha assimilati di conseguenza lo scrivo per tutti quanti e lo uso per tutti quanti il problema perché cazzo ce ne sono tante?

57:45.203 --> 57:49.084
e a questo punto l'aspirazione è quella che vi ho dato prima vi ricordate?

57:49.764 --> 57:52.065
cioè, come è fatto la reina, la vista, no?

57:53.145 --> 57:56.827
a questo punto invece sì, ma cos'è una vista?

57:58.707 --> 57:59.548
è l'impressione a coda?

58:01.663 --> 58:29.859
e queste sono le nostre due dati e quindi praticamente decidere quale prendere se usare un vettore o usare una lista io la scelgo sulla base delle mie conoscenze io scelgo una lista se so cosa è una lista non come fatto anche il vettore sapevate come era fatto il problema è quali sono le caratteristiche di un vettore che abbiamo visto e quali sono le criticità

58:31.757 --> 58:38.062
legate ad un vettore ci sono delle operazioni che sono onerose è chiaro?

58:39.263 --> 58:53.153
e quindi praticamente le stesse operazioni per altre strutture dati sono meno onerose è chiaro?

58:53.873 --> 59:00.198
il discorso è, devo conoscere punti di forza e punti di debolezza di ogni singola

59:01.593 --> 59:02.693
di ogni singolo container.

59:03.734 --> 59:07.155
Se conosco i punti di forte, se conosco i punti di debolezza, allora li scelgo.

59:07.776 --> 59:09.816
Se non li conosco, prendo il primo che mi viene.

59:11.217 --> 59:12.237
E mi viene sempre il vector.

59:15.959 --> 59:16.379
Chiaro?

59:17.079 --> 59:19.200
Quindi ti progetta un algoritmo.

59:19.460 --> 59:22.862
Mi va a scegliere anche la struttura dati ad data.

59:27.143 --> 59:30.325
Questa è la differenza tra ti scrive codice artigianale

59:31.785 --> 59:32.826
E chi progetta i codici?

59:33.787 --> 59:39.570
Per progettare i codici bisogna scegliere tutta la data più adeguata Dicevamo prima, posso fare tutto con i vettori?

59:40.791 --> 59:41.492
Quanto mi costa?

59:42.572 --> 59:43.193
Che cazzo te ne freghi?

59:43.253 --> 59:46.715
E' importante che funzionano.

59:46.755 --> 59:47.075
Chiaro?

59:48.036 --> 59:49.417
Il discorso qual è in pratica?

59:49.437 --> 59:50.858
In termini di efficienza, perdo.

59:51.978 --> 59:53.259
Non ti aspettare grandi cose.

59:55.340 --> 59:57.242
Il Flintstone, cioè, aveva la macchinina

01:00:01.341 --> 01:00:03.602
Tante macchine in aereo.

01:00:03.642 --> 01:00:05.262
Sì, sì, sì.

01:00:05.282 --> 01:00:05.682
E' chiaro?

01:00:06.942 --> 01:00:10.043
Quindi, questo è quello che sto cercando di dirvi.

01:00:12.403 --> 01:00:19.704
Allora, hanno ascoltato che avevamo iniziato ad introdurre un po' di cose sulle liste e sulla potenza delle liste.

01:00:22.785 --> 01:00:28.886
Le strutture dati fondamentali, in effetti, perché no?

01:00:33.622 --> 01:00:40.045
Prima ancora eravamo partiti in pratica dalle verebili singole.

01:00:40.706 --> 01:00:44.828
Poi l'evoluzione è stata stratta.

01:01:04.463 --> 01:01:09.204
rei, dimensione fissa, elementi continui, tutti hanno il stesso tipo.

01:01:10.704 --> 01:01:22.226
Invece il record o start, structure usa solo il C, tutto il resto è record.

01:01:25.147 --> 01:01:32.568
Invece questo è un raccoglitore che raccoglie elementi anche di tipo differente.

01:01:34.102 --> 01:01:41.223
anche non va abituata per l'idea del tutto.

01:01:41.243 --> 01:01:51.626
Quando dico anche significa che è possibile anche avere una struttura con tutti gli elementi quali, chiaro?

01:01:51.666 --> 01:01:53.106
Proprio trovi un sotto in mangioloso?

01:01:56.547 --> 01:02:03.648
No, fai piano piano, perché se non attuori, la situazione sarà più... Vabbè se la fa per strada torna prima.

01:02:05.837 --> 01:02:16.081
Quindi parliamo di arrei, parlando ovviamente di strutture dati statiche.

01:02:22.964 --> 01:02:31.868
Statico significa in pratica, una volta che il dato ha fissato la dimensione quello è.

01:02:38.214 --> 01:03:05.304
a questo punto accanto al concetto di dati statiche è stato associato le strutture dati dinamiche strutture dati dinamiche che significa che cambiano la forma a seconda ovviamente della situazione che si viene a verificare si aggiungono elementi, si tolgono elementi

01:03:06.693 --> 01:03:34.774
è chiaro che per poter creare effetto dinamismo ho bisogno di strumenti di uguale e la scaletta era con i puntatori ok, i puntatori sono l'instrumento che vi concentra l'interaccia quindi, dietro l'effetto dimensione variabile dimensione variabile di uno array

01:03:35.646 --> 01:03:48.897
99 su 100 c'è un puntatore poi bisogna vedere come stanno le corsature se non ci sono puntatori io quegli effetti non posso avere ci siete?

01:03:48.957 --> 01:03:49.618
attenzione!

01:03:50.438 --> 01:03:55.342
ma i puntatori sono un strumento quali sono le strutture dati dinamiche?

01:03:59.265 --> 01:04:03.249
qui possiamo dire strutture dati dinamiche su alcuni libri ci sono

01:04:06.133 --> 01:04:30.847
no, no, no è così lo dico struttura dati dinamica e non è una struttura stratta, è reale con il mutato ricominciamo a fare la prima struttura dati dinamica la prima struttura dati dinamica sono le viste va bene?

01:04:32.147 --> 01:04:32.988
l'evoluzione

01:04:33.864 --> 01:04:38.585
Altre strutture dati dinamiche sono le alberi.

01:04:43.866 --> 01:04:46.807
Altre strutture dati dinamiche sono i grafi.

01:04:50.108 --> 01:04:54.409
Ma anche qui i grafi possono essere implementati magari in tanti altri modi.

01:04:55.789 --> 01:04:58.070
Sicuramente è una possibilità.

01:05:01.871 --> 01:05:02.771
La ricerca artificiale

01:05:06.718 --> 01:05:10.500
Senza di questi, senza questi strumenti non esiste.

01:05:10.520 --> 01:05:17.624
La programmazione avanzata è finita.

01:05:21.366 --> 01:05:22.467
Ce la giochiamo con gli alberi.

01:05:24.888 --> 01:05:25.808
Capire il senso.

01:05:27.930 --> 01:05:35.994
Per capire, vi faccio un esempio per farvi capire quanto è importante capire il senso e l'importanza del concetto di albero.

01:05:37.757 --> 01:05:38.018
Bene.

01:05:39.718 --> 01:05:41.739
Ce l'avete presente una pagina web?

01:05:42.279 --> 01:05:42.420
Sì.

01:05:42.720 --> 01:05:51.083
Sapete che io posso creare un intero sito basato su un'unica pagina?

01:05:52.844 --> 01:05:54.605
Quindi il sito non è un insieme di pagina.

01:05:56.326 --> 01:05:57.987
O non sempre è un insieme di pagina?

01:05:59.387 --> 01:06:01.888
Un sito potrebbe anche essere un'unica pagina.

01:06:02.809 --> 01:06:03.369
Lo sapevi?

01:06:04.870 --> 01:06:05.070
Chiedo.

01:06:06.489 --> 01:06:11.450
Sì, perché c'è anche l'indirizzo delle altre pagine.

01:06:12.991 --> 01:06:14.931
Sì, no, sì, no.

01:06:16.832 --> 01:06:17.292
Ci siete?

01:06:17.312 --> 01:06:19.052
Il problema è un altro.

01:06:20.893 --> 01:06:27.555
Questo significa che io ho una pagina con all'interno una serie di elementi.

01:06:34.119 --> 01:06:45.602
e poi possono anche decidere se c'è di nuovo questo, se c'è di nuovo, cambia forma questo, è chiaro?

01:06:46.763 --> 01:06:58.186
In questo modo, senza spostarli dalla pagina, questo significa che se io faccio, tocco la freccia in alto e a sinistra attorno a pagina precedente, vado sull'altro sito.

01:06:59.926 --> 01:07:02.707
Quale è la dimostrazione che la pagina dinamica è tessica nel volo?

01:07:03.624 --> 01:07:04.044
ci siete?

01:07:06.666 --> 01:07:08.327
domanda, come si chiamano questi effetti?

01:07:09.348 --> 01:07:29.019
gli alberi risposti con gli alberi questa pagina tecnicamente tecnicamente è descritta attraverso un albero la parola chiave DOM document object model

01:07:31.610 --> 01:07:58.057
se conoscete quell'organizzazione potete modificare con un tipo di pagina albero e quindi le pagine rapidamente sono alberi se conosco la regola di accesso con gli elementi allora a questo punto io posso raggiungere il tempo dell'elemento a portare le dovute modifiche

01:07:59.189 --> 01:07:59.689
Ci siete?

01:07:59.729 --> 01:08:00.330
Ok.

01:08:01.271 --> 01:08:09.358
Quindi, struttura dei dinamici, puntatori, liste, alberi.

01:08:09.958 --> 01:08:13.601
Questo è l'argomento che dovremmo fare per quanto riguarda le strutture dati.

01:08:13.641 --> 01:08:14.302
Attenzione.

01:08:15.143 --> 01:08:21.288
Il discorso delle liste e degli alberi e l'anzorro e dei puntatori... Tutto collegato.

01:08:21.588 --> 01:08:21.889
No, no.

01:08:24.171 --> 01:08:27.914
Sono da replicare sui file.

01:08:29.807 --> 01:08:53.558
se non sapete, se non conoscete queste regole non le potete applicare sugli alberi e poi scoprirete sui file e poi scoprirete che dietro database ci sono delle organizzazioni stile presenza di puntatori stile list

01:08:55.078 --> 01:09:12.211
capire bene le liste significa replicare lo stesso concetto però con dati che sono presenti sui dischi lì non ci sono byte, lì c'è altre cose ci si vede?

01:09:12.271 --> 01:09:23.640
quindi questo praticamente è il futuro in particolare da partire dai container

01:09:24.258 --> 01:09:26.579
I container cosa sono, abbiamo detto?

01:09:26.839 --> 01:09:28.480
Dei contenitori di elementi.

01:09:29.720 --> 01:09:30.101
Chiaro?

01:09:31.381 --> 01:09:36.783
Progettare un container è perché evidentemente voglio progettare un raccoglitore di elementi.

01:09:38.164 --> 01:09:51.490
Ci sono già dei raccoglitori predisposti dalla C++, dalla Libria Standard, che sono la Vector, la List, the Q, e altri.

01:09:53.883 --> 01:10:02.809
anche per esempio un mappo, anche lì è molto interessante lavorare con quelle con quella configurazione, con quelle strutture, con quel container.

01:10:03.769 --> 01:10:08.452
Distorsione, sono tutti container ma non me ne basta uno, no?

01:10:09.833 --> 01:10:22.601
Quei container cercano di replicare praticamente i concetti che esprimono tipo il vettore e esprimono il concetto di array list, esprimono il concetto di list, quindi devo conoscere le regole di funzionamento

01:10:24.412 --> 01:10:35.635
ma c'è anche un'altra struttura dati molto utilizzata in maniera molto massiccia e quindi il vostro futuro prossimo saranno

01:10:55.848 --> 01:10:56.689
è chiaro?

01:10:56.729 --> 01:11:23.466
e quindi il nostro obiettivo sarà implementare la lista uno stack è una cosa lo stack è quella struttura stratta questa stratta struttura stratta che mi consente di implementare l'effetto chiamata di funzione una chiamata di funzione senza stack ha un senso desisto quindi gli stack

01:11:25.089 --> 01:11:35.191
su fondamentali per fare, per far partire, praticamente, un'altra chiamata.

01:11:36.171 --> 01:11:37.792
Le code?

01:11:39.572 --> 01:11:42.333
Basta ricordarsi quali sono, appunto, gli schedule.

01:11:43.473 --> 01:11:47.334
Uno schedule senza coda, non ha senso disegnare.

01:11:49.614 --> 01:11:51.575
E quindi, chiaramente, devo conoscere le code.

01:11:53.551 --> 01:12:03.698
mi piacerebbe di fare lo schedule se non sarebbero fatti anche le code, lì si sa che code con voi ho fatto tante cose, il fatto è che siete stati brevi a reagire, però ho fatto i spot, inizio ho perso pure un po' di tempo

01:12:25.034 --> 01:12:54.590
però non puoi chiedere di fare certe cose se non hai quegli strumenti che non si passano con quegli strumenti è stato un caso che con voi non ho parlato non era l'argomento di questo, adesso dovevamo fare questa cosa perché adesso è previsto che vengono fatte vissere altre cose te l'ho detto con voi è stato un esplorato

01:12:55.177 --> 01:13:00.061
E poi aspetta che restati presi voi a seguirmi.

01:13:01.183 --> 01:13:02.123
Campiamo di rendita.

01:13:04.766 --> 01:13:10.551
Sì e no, sì e no, nel senso che praticamente noi abbiamo visto che il grosso ce l'avete, questo sicuramente ci aiuta.

01:13:11.912 --> 01:13:20.840
Però, però, capire quando usare uno e quando usare l'altro, come usare uno e come usare l'altro.

01:13:22.774 --> 01:13:34.978
Noi non abbiamo tanto ricamato per esempio sulle funzioni, il passaggio dei parametri, su come lo passavamo, e poi sulle varie forme di implementazione.

01:13:34.998 --> 01:13:45.821
Sì, poi l'abbiamo visto, implementazione con liste, implementazione con... L'abbiamo fatto a recircolare, abbiamo implementato tutto.

01:13:48.012 --> 01:14:01.723
per voi si tratta di questo punto di panno fresco per chi se l'ha perso si tratta di studiare per lui che non c'era è morto chiaro?

01:14:03.124 --> 01:14:08.108
quindi questo è il vostro futuro, torno indietro siamo partiti questa sera?

01:14:12.972 --> 01:14:13.152
ok

01:14:15.170 --> 01:14:18.731
da container ci siete?

01:14:18.792 --> 01:14:27.755
ok, supponiamo di voler... e lo abbiamo fatto anche l'anno scorso credo, sì... supponiamo di voler implementare il container vecchio va bene?

01:14:30.596 --> 01:14:31.796
cosa c'è dietro?

01:14:32.016 --> 01:14:43.841
il fatto di usare questo cosa sentassi?

01:14:50.172 --> 01:14:53.273
ci dovrebbe venire per subito a reggire in questo modo.

01:14:54.433 --> 01:14:55.654
Che significa questa cosa?

01:14:56.134 --> 01:15:12.238
Bene, ogni volta che vedete questa combinazione per intitangolare con i potenti, bene, a questo punto dietro... C'è anche un po' di...

01:15:18.661 --> 01:15:24.607
C'è il template e dicevamo, cosa si intende per template?

01:15:24.647 --> 01:15:27.910
Cosa sono i template?

01:15:28.571 --> 01:15:30.232
Intanto qual'è il concetto di template?

01:15:30.252 --> 01:15:33.735
Il concetto di template significa, dicevamo, programmazione generica.

01:15:34.957 --> 01:15:37.119
Programmazione generica in che senso?

01:15:37.859 --> 01:15:39.541
Adesso ci vai in che senso?

01:15:39.581 --> 01:15:40.702
Da quale punto di vista?

01:15:42.644 --> 01:15:43.685
Dal punto di vista dei tipi.

01:15:47.343 --> 01:15:55.605
Realizzare un'applicazione generica è chiaro, non ha senso, detto così, ma rispetto ai tipi.

01:15:56.425 --> 01:15:57.005
Cosa vuol dire?

01:15:59.206 --> 01:16:14.910
Invece di realizzare un'applicazione con tipi noti e quindi specializzare un'applicazione e farla funzionare solo per gli interi puoi realizzare una seconda applicazione solo per i float

01:16:15.666 --> 01:16:16.666
che fa le stesse cose.

01:16:17.447 --> 01:16:29.692
Questo significa web 1.0 che significa ogni pagina un colore diverso.

01:16:30.873 --> 01:16:38.656
Qualcosa è successo in pratica, programmazione dinamica, un'unica pagina, una regola da cambiare.

01:16:39.617 --> 01:16:42.118
Cambiavo la regola ma la pagina era sempre la stessa.

01:16:44.287 --> 01:17:13.475
quindi template significa invece di lavorare con un tipo specifico ho la possibilità di lavorare con diversi tipi quindi io progetto un'applicazione che funziona con tipi differenti, cioè con lo stesso tipo adattabile a diversi tipi e lo stesso tipo è un tipo generico il problema è che se ci pensate bene

01:17:14.204 --> 01:17:20.026
Detta così, non ha senso parlare di tipi generici, è chiaro?

01:17:21.066 --> 01:17:24.827
E quindi, cos'è il tipo generico?

01:17:25.767 --> 01:17:26.948
Si chiama template.

01:17:28.768 --> 01:17:30.729
E come si crea un tipo generico?

01:17:30.829 --> 01:17:31.629
Chi lo crea?

01:17:31.689 --> 01:17:33.130
Lo mette a disposizione linguaggio?

01:17:33.290 --> 01:17:34.050
No, siamo noi.

01:17:43.895 --> 01:17:59.224
template class t chi è il tipo?

01:18:01.205 --> 01:18:02.766
t come lo usi?

01:18:04.987 --> 01:18:05.868
come se fosse un tipo

01:18:13.541 --> 01:18:15.163
Tempere di memoria.

01:18:42.555 --> 01:18:43.415
Allora, tipo 8 più 16.

01:19:13.488 --> 01:19:18.692
o type, chiaro?

01:19:20.714 --> 01:19:21.514
Questa è la funzione.

01:19:22.015 --> 01:19:28.680
A questa funzione io sto fornendo un tipo, un parametro, un parametro di tipo generico.

01:19:30.061 --> 01:19:30.421
Va bene?

01:19:32.462 --> 01:19:35.465
A questo punto come uso questo parametro?

01:19:35.665 --> 01:19:42.069
Semplicemente chiedendo di visualizzare, chiaro?

01:19:43.306 --> 01:20:00.373
il contenuto che si è stato assegnato al momento del reclamato faccio a me il dichiaro intero a cui assegno un valore 5 e lo passo come parametro alle F siete?

01:20:01.894 --> 01:20:10.217
a questo punto io mi aspetto che qui compagna i 5 ci siete?

01:20:11.978 --> 01:20:12.558
cosa vuoi dire?

01:20:15.478 --> 01:20:40.609
per apprezzare, potremmo farlo in altri modi, usiamo, sfruttiamo anche lo strumento del C++ string B è uguale... ciao ci siete?

01:20:41.789 --> 01:20:43.030
a questo punto cosa faccio?

01:20:48.374 --> 01:21:08.287
faccio la chiamata passando come il parametro B ma in questo momento B è una stringa quindi qualsiasi funzione funziona svolghi il suo compito sia con gli interi che con le stringe è chiaro?

01:21:09.668 --> 01:21:14.691
sia con i flot che con i char

01:21:16.773 --> 01:21:17.173
È chiaro?

01:21:18.014 --> 01:21:18.574
Attenzione.

01:21:26.600 --> 01:21:28.041
No, no.

01:21:28.781 --> 01:21:29.602
Per un'altra cosa.

01:21:30.722 --> 01:21:30.903
No.

01:21:32.223 --> 01:21:35.145
Scusate, stavo nella partita anzitutto.

01:21:37.207 --> 01:21:41.690
Allora, dicevamo, queste sono le funzioni

01:21:54.116 --> 01:21:56.277
Come si crea una funzione template?

01:21:56.357 --> 01:21:59.479
Cos'è una funzione template, una funzione generica?

01:21:59.559 --> 01:22:11.284
Che significa funzione generica, una funzione che può lavorare a questo punto con tipi differenti e completamente svincolata da qualunque tipo, è chiaro?

01:22:11.986 --> 01:22:41.692
come si costruisce una funzione template regola attenzione questa poppia deve viaggiare insieme quindi definisco il template quindi il modello di riferimento gli assegno un nome utilizzando la sintassi class nome del tipo generico lo uso all'interno della

01:22:43.078 --> 01:22:43.919
nostra funzione.

01:22:44.059 --> 01:22:51.427
In questo caso lo sto usando come parametro, potrei anche non usarlo.

01:23:12.455 --> 01:23:15.717
Allora mettici external, almeno, con un po' di senso.

01:23:15.757 --> 01:23:17.338
No, comunque, facciamo la chiamata.

01:23:17.598 --> 01:23:19.519
Ok, questa C, che è generica, per cui per avere cagato.

01:23:19.539 --> 01:23:21.560
No, aspetta un attimo, eh.

01:23:21.580 --> 01:23:23.221
Per forza di essere un parametro.

01:23:23.261 --> 01:23:23.802
No, no, no, no, no.

01:23:23.822 --> 01:23:25.743
Facciamo una cosa di questo genere.

01:23:25.783 --> 01:23:28.164
Perché questo diamante funziona.

01:23:42.381 --> 01:23:52.427
Se è una extra... Vediamo se funziona, se non dovrei.

01:23:52.447 --> 01:23:53.888
No, perché non ha senso.

01:23:55.369 --> 01:23:59.272
Per te non viene inizializzato, non succede niente, esiste, così.

01:24:01.893 --> 01:24:07.497
Nel momento in cui chiami la funzione non ha nessun tipo a cui assegnare il compilatore quando crea la funzione.

01:24:09.685 --> 01:24:11.367
come fa a riconoscere che tipo è b?

01:24:11.947 --> 01:24:23.014
che deve essere per forza nei parametri a meno che fai una classe e gli metti qualche proprietà fai una classe con delle proprietà?

01:24:23.034 --> 01:24:28.418
no, la classe è un'altra cosa queste sono le funzioni template è chiaro?

01:24:29.299 --> 01:24:31.660
quindi la regola per costruire una funzione template

01:24:33.925 --> 01:24:41.893
che lavora con dei tipi generici che poi vengono specializzati domanda la specializzazione dove avviene?

01:24:42.353 --> 01:24:55.946
compilazione nel mail e nello specifico durante la fase di compilazione chiaro?

01:24:56.847 --> 01:24:57.128
perché?

01:24:58.659 --> 01:25:26.902
il compilatore si accorge che questa è la stringa e a questo punto specializza il parametro e in cascata avverrà la specializzazione di tutto l'uso, tutte le oporenze di quel parametro quindi la specializzazione avverrà, attenzione ha detto

01:25:27.515 --> 01:25:35.462
Non è dinamica statica, non è il runtime.

01:25:35.482 --> 01:25:45.251
C'è quel termine che usano su CNR, che era scritto nelle eccezioni tra l'altro.

01:25:46.929 --> 01:25:47.349
Ci siete?

01:25:48.189 --> 01:25:49.350
Priempti, forse.

01:25:49.750 --> 01:25:54.651
Ti si specializza quando la valore è specializzata.

01:25:54.691 --> 01:25:58.612
C'è il sito di un liveo aperto, per caso?

01:25:58.632 --> 01:26:02.512
Cioè, ti dico, ok, ti passo l'intero.

01:26:04.653 --> 01:26:08.474
Quindi è il main che decide, guarda, a quella frontiera io voglio passarlo intero.

01:26:08.934 --> 01:26:11.834
Prendo l'intero, lo confeziono e te lo passo.

01:26:12.235 --> 01:26:13.535
Ma a quanto tempo ti passo l'intero?

01:26:15.047 --> 01:26:19.371
Cioè come tu in cui devo avvisare la funzione e dirgli, oh chi c'ha?

01:26:20.612 --> 01:26:23.374
Tu stai lavorando con un tipo generico, no?

01:26:24.935 --> 01:26:34.923
Attenzione, sta per riparti un intero, quindi diventerai, questa T deve diventare un intero.

01:26:35.363 --> 01:26:38.186
Qual è il momento esatto in cui avviene questa cosa?

01:26:38.526 --> 01:26:42.229
La risposta è durante la fase di compilazione.

01:26:45.387 --> 01:26:45.627
Chiaro?

01:26:46.808 --> 01:26:48.249
Non il runtime.

01:26:48.569 --> 01:26:49.229
Ah no, l'ho visto.

01:26:49.289 --> 01:26:51.891
L'ho aperto il tempo.

01:26:53.052 --> 01:26:57.495
Il runtime invece succede un'altra cosa.

01:26:57.595 --> 01:27:02.518
Il runtime succede un'altra cosa.

01:27:05.359 --> 01:27:07.421
Il polimorfismo che lo fa il runtime.

01:27:09.102 --> 01:27:14.305
Nel senso che durante l'esefuzione

01:27:14.787 --> 01:27:16.408
Sì, ma prima ho già fatto la compilazione.

01:27:16.428 --> 01:27:18.049
Ho fatto già la traduzione.

01:27:19.189 --> 01:27:21.710
Il runtime significa che non ho ancora preso la decisione.

01:27:23.351 --> 01:27:26.772
Qui invece, in compilazione, ho già deciso che passerò intero.

01:27:27.053 --> 01:27:29.414
Perché c'è comunque, c'è la chiamata.

01:27:30.554 --> 01:27:30.934
È chiaro?

01:27:33.235 --> 01:27:36.637
Vabbò, questo è l'ultimo, ma non ultimo.

01:27:38.077 --> 01:27:39.238
Ultimo, ma non ultimo.

01:27:44.565 --> 01:27:45.326
La spandanda è questa.

01:27:45.346 --> 01:27:46.347
La spandanda è questa.

01:27:46.387 --> 01:27:48.188
La spandanda è questa.

01:27:48.689 --> 01:27:51.892
La spandanda è questa.

01:27:51.972 --> 01:28:02.722
La spandanda è questa.

01:28:02.822 --> 01:28:04.063
La spandanda è questa.

01:28:04.103 --> 01:28:07.486
La spandanda è questa.

01:28:07.526 --> 01:28:08.407
La spandanda è questa.

01:28:09.040 --> 01:28:14.463
Sì, non ho mai sentito, la prima volta lo sento e ce l'ho sentito qua.

01:28:20.627 --> 01:28:24.529
Manca il nome.

01:28:32.614 --> 01:28:34.375
No, manca il nome.

01:28:39.161 --> 01:28:43.263
in mossa.

01:28:43.323 --> 01:28:44.084
Senti.

01:28:45.985 --> 01:28:47.125
Puoi fare il tipo di ritorno?

01:28:47.325 --> 01:28:51.347
No, vorremmo fare una cosa anche silenzio.

01:28:51.427 --> 01:28:52.388
Che tipo di esse?

01:28:53.208 --> 01:28:53.788
Aspetta, aspetta.

01:28:54.249 --> 01:28:55.029
T-reference.

01:28:55.629 --> 01:29:07.496
Allora, la cacacchia.

01:29:10.529 --> 01:29:11.670
Ok Vengo io?

01:29:11.710 --> 01:29:16.892
No, devo metterci il corso, forza.

01:29:16.972 --> 01:29:18.132
Il corso dottore?

01:29:38.281 --> 01:29:38.382
No, no.

01:29:43.507 --> 01:29:58.498
si chiamano Static Binding e Dynamic Binding Static è perché è in Compile Time e Dynamic è perché è in Runtime.

01:29:58.518 --> 01:30:03.262
Prova di parlare di Early Binding e Late Binding.

01:30:03.322 --> 01:30:05.143
Ah si, Early Binding e Static Binding.

01:30:12.295 --> 01:30:13.296
C'è bisogno di robi.

01:30:13.376 --> 01:30:15.217
Ah, troppo orgoglioso.

01:30:15.237 --> 01:30:20.081
Sai perché non mi mandi gli esercizi?

01:30:20.101 --> 01:30:20.701
Provate questa.

01:30:20.721 --> 01:30:20.882
Allora...

01:30:38.971 --> 01:30:58.503
In questo caso, 70.000 a tanto, ho creato una classe template che significa una classe che lavora con un tipo generico di nome T Come lo sto usando?

01:30:59.443 --> 01:31:05.187
Lo sto utilizzando per... Eh, però non c'è un problema

01:31:05.706 --> 01:31:23.904
lo sto utilizzando in pratica all'interno del costruttore e lo sto utilizzando come tipo di parametro da passare però il template andrebbe anche sul costruttore allora quel template lì vale per le proprietà della classe

01:31:24.446 --> 01:31:29.751
Se tu vuoi usarlo così nel costruttore devi scrivere un'altra volta a template per il costruttore.

01:31:30.091 --> 01:31:33.974
Nì, nel senso che ti dico subito.

01:31:34.194 --> 01:31:41.841
Il problema, ecco, in effetti questo lo dovete provare, perché... No, un problema per vota, un problema per vota.

01:31:42.442 --> 01:31:46.925
Poi chiariamo, è giusto quello che hai detto, però ti faccio allontare una cosa.

01:31:47.126 --> 01:31:51.710
Quindi, qui il nuovo tipo lo sto utilizzando

01:31:52.737 --> 01:31:59.082
come parametro da passare al prossimitore.

01:31:59.142 --> 01:32:09.570
La magia avverrà nel main, nel senso che è il main che vuole lavorare con gli interi, quindi deve specializzare.

01:32:10.590 --> 01:32:15.674
Vecchia classe, nuovo tipo, parentesi tonda,

01:32:18.046 --> 01:32:41.033
il parametro, in questo caso gli sto chiedendo di passare un intero quindi quella T verrà specializzata in intero se ci fosse stato un float avremmo aggiunto un float, se ci fosse stata una stringa avremmo aggiunto una stringa, è chiaro?

01:32:42.182 --> 01:32:44.864
Ok, per adesso ci perdiamo, perché c'è un intervallo.

01:32:45.164 --> 01:32:47.865
La cosa che dice di te che è chiusa, sai quando?

01:32:51.107 --> 01:32:51.887
L'implementazione.

01:32:51.947 --> 01:32:53.768
L'implementazione separata.

01:32:53.869 --> 01:32:57.430
Se la tieni nella classe, lui si tira dietro.

01:32:59.211 --> 01:32:59.392
Si?

01:32:59.452 --> 01:33:00.572
Ok, ok, ho capito.

01:33:00.612 --> 01:33:06.836
Quando la metti fuori, tu fai separati, che lì ti crea problemi, che ci metti lo stesso.

01:33:06.876 --> 01:33:09.897
No, no, ma anche se lo stesso fai, in realtà, quando fai le classi

01:33:12.106 --> 01:33:15.567
Le classi template, tu le devi per forza fare sullo stesso file.

01:33:16.747 --> 01:33:20.168
Perché se le fai su un altro file, vuol dire che tu le stai già a specialità.

01:33:20.508 --> 01:33:22.169
No, magari se è fuori della classe.

01:33:22.189 --> 01:33:26.390
Sì, l'importante è che, cioè, sarei di chiare all'interno del file.

01:33:26.770 --> 01:33:27.210
Scusate?

01:33:27.711 --> 01:33:29.791
No, all'interno della classe.

01:33:29.951 --> 01:33:33.492
Esatto, all'interno della classe.

01:33:33.732 --> 01:33:34.953
Non dà problemi.

01:33:35.253 --> 01:33:38.034
Senti, puoi essere sullo stesso file.

01:33:38.054 --> 01:33:39.074
Sì, devi dare piedi.

